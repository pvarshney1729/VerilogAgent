{
    "code": "module TopModule(\n    input logic clk,             // Clock signal\n    input logic load,            // Synchronous active high load signal\n    input logic reset,           // Asynchronous active high reset signal\n    input logic [511:0] data,    // Input data bus (512 bits, unsigned)\n    output logic [511:0] q       // Output state bus (512 bits, unsigned)\n);\n\n    logic [511:0] next_q;\n\n    always_ff @(posedge clk or posedge reset) begin\n        if (reset) begin\n            q <= 512'b0;\n        end else if (load) begin\n            q <= data;\n        end else begin\n            q <= next_q;\n        end\n    end\n\n    always_comb begin\n        next_q[0] = q[1] ^ (q[0] | 1'b0); // q[-1] assumed 0\n        next_q[511] = q[510] ^ (q[511] | 1'b0); // q[512] assumed 0\n        for (int i = 1; i < 511; i++) begin\n            next_q[i] = q[i+1] ^ (q[i] | q[i-1]);\n        end\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "S"
    }
}