{
    "code": "module TopModule (\n    input logic clk,\n    input logic shift_ena,\n    input logic count_ena,\n    input logic data,\n    output logic [3:0] q\n);\n\n    // Internal register to hold the state of q\n    logic [3:0] q_reg;\n\n    // Initialize q_reg to 4'b0000\n    initial begin\n        q_reg = 4'b0000;\n    end\n\n    // Sequential logic for shift and count operations\n    always_ff @(posedge clk) begin\n        if (shift_ena && !count_ena) begin\n            // Shift operation: Shift in data at MSB\n            q_reg <= {data, q_reg[3:1]};\n        end else if (!shift_ena && count_ena) begin\n            // Count operation: Decrement by 1\n            if (q_reg != 4'b0000) begin\n                q_reg <= q_reg - 1;\n            end\n        end\n        // If both shift_ena and count_ena are high, behavior is undefined\n    end\n\n    // Assign the internal register to the output\n    assign q = q_reg;\n\nendmodule",
    "test_results": {
        "num_mismatch": 1894,
        "passfail": "R"
    }
}