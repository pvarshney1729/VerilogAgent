{
    "code": "```verilog\nmodule TopModule (\n    input logic clk,\n    input logic areset,\n    input logic predict_valid,\n    input logic [6:0] predict_pc,\n    input logic train_valid,\n    input logic train_taken,\n    input logic train_mispredicted,\n    input logic [6:0] train_history,\n    input logic [6:0] train_pc,\n    output logic predict_taken,\n    output logic [6:0] predict_history\n);\n\n    // Parameters\n    parameter PHT_SIZE = 128;\n    parameter COUNTER_BITS = 2;\n\n    // PHT: Pattern History Table\n    logic [COUNTER_BITS-1:0] PHT [0:PHT_SIZE-1];\n\n    // Global history register\n    logic [6:0] global_history;\n\n    // Internal signals\n    logic [6:0] predict_index;\n    logic [6:0] train_index;\n    logic [COUNTER_BITS-1:0] counter_value;\n\n    // Initialize PHT and global history on reset\n    always_ff @(posedge clk or posedge areset) begin\n        if (areset) begin\n            global_history <= 7'b0000000;\n            for (int i = 0; i < PHT_SIZE; i++) begin\n                PHT[i] <= 2'b00;\n            end\n        end else begin\n            if (train_valid) begin\n                train_index = train_pc ^ train_history;\n                if (train_taken) begin\n                    if (PHT[train_index] < 2'b11) begin\n                        PHT[train_index] <= PHT[train_index] + 1;\n                    end\n                end else begin\n                    if (PHT[train_index] > 2'b00) begin\n                        PHT[train_index] <= PHT[train_index] - 1;\n                    end\n                end\n                if (train_mispredicted) begin\n                    global_history <= train_history;\n                end\n            end else if (predict_valid) begin\n                predict_index = predict_pc ^ global_history;\n                counter_value = PHT[predict_index];\n                predict_taken = counter_value[1];\n                predict_history = global_history;\n            end\n        end\n    end\n\nendmodule\n```",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "S"
    }
}