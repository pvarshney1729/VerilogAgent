{
    "code": "module TopModule (\n    input logic clk,        // Clock signal, positive edge triggered.\n    input logic reset,      // Synchronous active high reset.\n    input logic [7:0] in,   // 8-bit input stream, where bit[0] is LSB.\n    output logic done       // Output signal, high for one clock cycle after message receipt.\n);\n\n    typedef enum logic [1:0] {\n        IDLE  = 2'b00,\n        BYTE1 = 2'b01,\n        BYTE2 = 2'b10,\n        BYTE3 = 2'b11\n    } state_t;\n\n    state_t state;\n\n    always_ff @(posedge clk) begin\n        if (reset) begin\n            state <= IDLE;\n            done <= 1'b0;\n        end else begin\n            case (state)\n                IDLE: begin\n                    done <= 1'b0;\n                    if (in[3]) state <= BYTE1;\n                end\n                BYTE1: begin\n                    state <= BYTE2;\n                end\n                BYTE2: begin\n                    state <= BYTE3;\n                end\n                BYTE3: begin\n                    state <= IDLE;\n                    done <= 1'b1;\n                end\n            endcase\n        end\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 149,
        "passfail": "R"
    },
    "iterations_used": 1
}