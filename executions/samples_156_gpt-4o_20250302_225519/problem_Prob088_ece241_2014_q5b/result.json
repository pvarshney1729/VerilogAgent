{
    "code": "module TopModule (\n    input logic clk,       // Clock signal, positive edge-triggered\n    input logic areset,    // Asynchronous active-high reset\n    input logic x,         // Input signal, 1-bit\n    output logic z         // Output signal, 1-bit\n);\n\n    typedef enum logic [1:0] {\n        STATE_A = 2'b01,\n        STATE_B = 2'b10\n    } state_t;\n\n    state_t state;\n\n    always_ff @(posedge clk or posedge areset) begin\n        if (areset) begin\n            state <= STATE_A;\n            z <= 0;\n        end else begin\n            case (state)\n                STATE_A: begin\n                    if (x) begin\n                        state <= STATE_B;\n                        z <= 1;\n                    end else begin\n                        state <= STATE_A;\n                        z <= 0;\n                    end\n                end\n                STATE_B: begin\n                    if (x) begin\n                        state <= STATE_B;\n                        z <= 0;\n                    end else begin\n                        state <= STATE_B;\n                        z <= 1;\n                    end\n                end\n                default: begin\n                    state <= STATE_A;\n                    z <= 0;\n                end\n            endcase\n        end\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 209,
        "passfail": "R"
    },
    "iterations_used": 2
}