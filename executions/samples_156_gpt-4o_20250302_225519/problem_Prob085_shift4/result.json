{
    "code": "module TopModule (\n    input  logic clk,         // Clock signal, active on the positive edge\n    input  logic areset,      // Asynchronous active-high reset\n    input  logic load,        // Synchronous active-high load control\n    input  logic ena,         // Synchronous active-high enable for shifting\n    input  logic [3:0] data,  // 4-bit wide data input\n    output logic [3:0] q      // 4-bit wide shift register output\n);\n\nalways_ff @(posedge clk or posedge areset) begin\n    if (areset) begin\n        q <= 4'b0000;\n    end else if (load) begin\n        q <= data;\n    end else if (ena) begin\n        q <= {1'b0, q[3:1]};\n    end\nend\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "."
    },
    "iterations_used": 2
}