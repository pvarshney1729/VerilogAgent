<ENHANCED_SPEC>
Module Name: TopModule

Interface:
- Input Ports:
  - `input wire clk`: Clock signal. All sequential logic is triggered on the positive edge.
  - `input wire reset`: Active high synchronous reset.
  - `input wire data`: Serial data input for pattern detection and delay configuration.
  - `input wire ack`: User acknowledgment signal after the timer completes.

- Output Ports:
  - `output reg [3:0] count`: Current remaining time of the timer. Valid only during counting.
  - `output reg counting`: Indicates active counting phase.
  - `output reg done`: Indicates completion of the timer delay.

Functional Description:
1. Pattern Detection & Delay Configuration:
   - The module begins operation by searching for the bit pattern `1101` on the `data` input.
   - Once `1101` is detected, the next 4 bits are serially shifted in, most-significant-bit first, to form `delay[3:0]`, which specifies the timer duration.

2. Timer Operation:
   - The `counting` signal is asserted when the timer begins.
   - The timer counts for `(delay[3:0] + 1) * 1000` clock cycles.
   - The `count` output reflects the current remaining time, decrementing every 1000 cycles:
     - `count` starts at `delay` for the first 1000 cycles,
     - then `delay - 1` for the next 1000 cycles, continuing until `count` reaches `0`.

3. Completion & Reset:
   - After counting is complete, `counting` is de-asserted and `done` is asserted to signal completion.
   - The module waits for `ack` to be high before resetting to search for the `1101` pattern again.

Initial Conditions & Edge Cases:
- On reset (`reset` high), the module initializes to search for the `1101` pattern.
- When not counting, the `count[3:0]` output is considered a don't-care value.
- The module does not consider new input data during counting until reset by `ack`.

Signal Conventions:
- Bit indexing is 0-based, with `bit[0]` as the least significant bit (LSB).

Note: Ensure that all sequential elements have explicitly defined initial states upon reset.
</ENHANCED_SPEC>