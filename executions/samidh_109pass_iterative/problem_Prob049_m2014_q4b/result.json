{
    "code": "module TopModule (\n    input logic clk,    // 1-bit clock signal\n    input logic ar,     // 1-bit asynchronous reset signal, active high\n    input logic d,      // 1-bit data input\n    output logic q      // 1-bit output\n);\n\n    always_ff @(posedge clk or posedge ar) begin\n        if (ar) begin\n            q <= 1'b0;  // Reset output to 0 when asynchronous reset is high\n        end else begin\n            q <= d;     // On clock edge, update output to match input d\n        end\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "."
    },
    "iterations_used": 2
}