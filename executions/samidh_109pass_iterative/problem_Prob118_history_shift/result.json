{
    "code": "module TopModule (\n    input  logic        clk,              // Clock signal, positive edge triggered\n    input  logic        areset,           // Asynchronous reset, active high\n    input  logic        predict_valid,    // Prediction valid signal\n    input  logic        predict_taken,    // Prediction result (1: taken, 0: not taken)\n    input  logic        train_mispredicted, // Misprediction signal\n    input  logic        train_taken,      // Actual branch result (1: taken, 0: not taken)\n    input  logic [31:0] train_history,    // History prior to mispredicted branch\n    output logic [31:0] predict_history   // Current history register state\n);\n\n    always_ff @(posedge clk or posedge areset) begin\n        if (areset) begin\n            predict_history <= 32'b0;\n        end else if (train_mispredicted) begin\n            predict_history <= {train_history[30:0], train_taken};\n        end else if (predict_valid) begin\n            predict_history <= {predict_history[30:0], predict_taken};\n        end\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "."
    },
    "iterations_used": 1
}