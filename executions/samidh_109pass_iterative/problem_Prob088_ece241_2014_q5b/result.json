{
    "code": "module TopModule (\n    input logic clk,\n    input logic areset, // Asynchronous active-high reset\n    input logic x,\n    output logic z\n);\n\n    // State encoding\n    localparam logic [1:0] state_A = 2'b01;\n    localparam logic [1:0] state_B = 2'b10;\n\n    logic [1:0] state, next_state;\n\n    // State transition logic\n    always_ff @(posedge clk or posedge areset) begin\n        if (areset) begin\n            state <= state_A;\n        end else begin\n            state <= next_state;\n        end\n    end\n\n    // Next state logic\n    always_comb begin\n        case (state)\n            state_A: begin\n                if (x == 0) begin\n                    next_state = state_A;\n                    z = 0;\n                end else begin\n                    next_state = state_B;\n                    z = 1;\n                end\n            end\n            state_B: begin\n                if (x == 0) begin\n                    next_state = state_B;\n                    z = 1;\n                end else begin\n                    next_state = state_B;\n                    z = 0;\n                end\n            end\n            default: begin\n                next_state = state_A;\n                z = 0;\n            end\n        endcase\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "."
    },
    "iterations_used": 1
}