{
    "code": "module TopModule (\n    input logic clk,             // Clock signal, positive-edge triggered\n    input logic areset,          // Asynchronous reset signal, active-high\n    input logic predict_valid,   // Indicates a valid prediction, 1-bit\n    input logic predict_taken,   // Prediction result to be shifted into history, 1-bit\n    input logic train_mispredicted, // Indicates a misprediction condition, 1-bit\n    input logic train_taken,     // Actual result of the branch post-misprediction, 1-bit\n    input logic [31:0] train_history, // 32-bit history prior to mispredicted branch, unsigned\n    output logic [31:0] predict_history // 32-bit current branch history, unsigned\n);\n\n    always_ff @(posedge clk or posedge areset) begin\n        if (areset) begin\n            predict_history <= 32'b0;\n        end else if (train_mispredicted) begin\n            predict_history <= {train_history[30:0], train_taken};\n        end else if (predict_valid) begin\n            predict_history <= {predict_history[30:0], predict_taken};\n        end\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "."
    }
}