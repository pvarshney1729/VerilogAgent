{
    "code": "module TopModule(\n    input wire in,              // Unsigned 1-bit input signal\n    input wire [1:0] state,     // Unsigned 2-bit state input\n    output reg [1:0] next_state,// Unsigned 2-bit next state output\n    output reg out              // Unsigned 1-bit output signal\n);\n\n    always @(*) begin\n        case (state)\n            2'b00: begin // State A\n                next_state = (in == 1'b0) ? 2'b00 : 2'b01;\n                out = 1'b0;\n            end\n            2'b01: begin // State B\n                next_state = (in == 1'b0) ? 2'b10 : 2'b01;\n                out = 1'b0;\n            end\n            2'b10: begin // State C\n                next_state = (in == 1'b0) ? 2'b00 : 2'b11;\n                out = 1'b0;\n            end\n            2'b11: begin // State D\n                next_state = (in == 1'b0) ? 2'b10 : 2'b01;\n                out = 1'b1;\n            end\n            default: begin // Default case for invalid states\n                next_state = 2'b00; // Default to State A\n                out = 1'b0;\n            end\n        endcase\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "."
    }
}