{
    "code": "module TopModule (\n    input logic clk,          // Clock signal, triggers on the positive edge\n    input logic rst,          // Synchronous reset, active high\n    input logic load,         // Load signal, active high\n    input logic [9:0] data,   // 10-bit data input, bit[0] is the least significant bit\n    output logic tc           // Terminal count output, active high when counter reaches 0\n);\n\n    logic [9:0] counter;      // Internal 10-bit down-counter\n\n    always @(posedge clk) begin\n        if (rst) begin\n            counter <= 10'b0; // Initialize counter to 0 on reset\n            tc <= 1'b0;       // Deassert terminal count on reset\n        end else if (load) begin\n            counter <= data;   // Load the counter\n            tc <= (data == 10'b0); // Set tc based on loaded data\n        end else if (counter != 10'b0) begin\n            counter <= counter - 1; // Decrement counter\n            tc <= (counter == 10'b1); // Assert tc when counter reaches 0\n        end\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "."
    }
}