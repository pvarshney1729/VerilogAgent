{
    "code": "module TopModule (\n    input logic clk,        // Clock signal\n    input logic resetn,     // Active-low, synchronous reset\n    input logic in,         // Serial input data\n    output logic out        // Serial output data\n);\n\n    // 4-bit shift register\n    logic [3:0] shift_reg;\n\n    // Sequential logic for shift register\n    always_ff @(posedge clk) begin\n        if (!resetn) begin\n            shift_reg <= 4'b0000; // Reset all bits to 0\n        end else begin\n            shift_reg <= {shift_reg[2:0], in}; // Shift left and load new bit\n        end\n    end\n\n    // Output the MSB of the shift register\n    assign out = shift_reg[3];\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "."
    }
}