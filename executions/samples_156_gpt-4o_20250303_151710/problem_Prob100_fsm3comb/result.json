{
    "code": "module TopModule (\n    input wire in,               // Single-bit input\n    input wire [1:0] state,      // 2-bit current state input, unsigned\n    output reg [1:0] next_state, // 2-bit next state output, unsigned\n    output reg out               // Single-bit output\n);\n\nalways @(*) begin\n    case (state)\n        2'b00: begin // State A\n            if (in == 1'b0) begin\n                next_state = 2'b00; // Stay in A\n            end else begin\n                next_state = 2'b01; // Transition to B\n            end\n            out = 1'b0;\n        end\n        2'b01: begin // State B\n            if (in == 1'b0) begin\n                next_state = 2'b10; // Transition to C\n            end else begin\n                next_state = 2'b01; // Stay in B\n            end\n            out = 1'b0;\n        end\n        2'b10: begin // State C\n            if (in == 1'b0) begin\n                next_state = 2'b00; // Transition to A\n            end else begin\n                next_state = 2'b11; // Transition to D\n            end\n            out = 1'b0;\n        end\n        2'b11: begin // State D\n            if (in == 1'b0) begin\n                next_state = 2'b10; // Transition to C\n            end else begin\n                next_state = 2'b01; // Transition to B\n            end\n            out = 1'b1;\n        end\n        default: begin\n            next_state = 2'b00; // Default to State A\n            out = 1'b0;\n        end\n    endcase\nend\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "."
    }
}