{
    "code": "module TopModule (\n    input logic clk,             // Clock input\n    input logic reset,           // Active-high synchronous reset\n    input logic [2:0] s,         // 3-bit water level sensor input, s[2] = highest sensor\n    output logic fr2,            // Flow rate control output 2\n    output logic fr1,            // Flow rate control output 1\n    output logic fr0,            // Flow rate control output 0\n    output logic dfr             // Supplemental flow control output\n);\n\n    logic [2:0] prev_s;          // Register to hold the previous state of s\n\n    // Sequential logic to capture previous state and handle reset\n    always_ff @(posedge clk) begin\n        if (reset) begin\n            prev_s <= 3'b000;\n            fr2 <= 1;\n            fr1 <= 1;\n            fr0 <= 1;\n            dfr <= 1;\n        end else begin\n            prev_s <= s;\n            // Determine flow rate control outputs based on current sensor input\n            case (s)\n                3'b111: begin\n                    fr2 <= 0;\n                    fr1 <= 0;\n                    fr0 <= 0;\n                    dfr <= 0;\n                end\n                3'b011: begin\n                    fr2 <= 0;\n                    fr1 <= 0;\n                    fr0 <= 1;\n                    dfr <= 0;\n                end\n                3'b001: begin\n                    fr2 <= 0;\n                    fr1 <= 1;\n                    fr0 <= 1;\n                    dfr <= 0;\n                end\n                3'b000: begin\n                    fr2 <= 1;\n                    fr1 <= 1;\n                    fr0 <= 1;\n                    dfr <= 1;\n                end\n                default: begin\n                    fr2 <= 0;\n                    fr1 <= 0;\n                    fr0 <= 0;\n                    dfr <= 0;\n                end\n            endcase\n\n            // Determine supplemental flow control based on transition\n            if (s > prev_s) begin\n                dfr <= 1;\n            end else begin\n                dfr <= 0;\n            end\n        end\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 1658,
        "passfail": "R"
    }
}