{
    "code": "module TopModule (\n    input logic clk,\n    input logic reset,\n    input logic x,\n    output logic z\n);\n\n    logic xor_out, and_out, or_out;\n    logic q1, q2, q3;\n\n    // Combinational Logic\n    always @(*) begin\n        xor_out = x ^ q1;\n        and_out = x & ~q2;\n        or_out = x | ~q3;\n    end\n\n    // Sequential Logic with Synchronous Reset\n    always_ff @(posedge clk) begin\n        if (reset) begin\n            q1 <= 1'b0;\n            q2 <= 1'b0;\n            q3 <= 1'b0;\n        end else begin\n            q1 <= xor_out;\n            q2 <= and_out;\n            q3 <= or_out;\n        end\n    end\n\n    // NOR Gate for Output\n    assign z = ~(q1 | q2 | q3);\n\nendmodule",
    "test_results": {
        "num_mismatch": 45,
        "passfail": "R"
    }
}