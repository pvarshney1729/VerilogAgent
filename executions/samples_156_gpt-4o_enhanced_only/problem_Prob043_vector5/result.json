{
    "code": "module TopModule(\n    input logic a,\n    input logic b,\n    input logic c,\n    input logic d,\n    input logic e,\n    output logic [24:0] out\n);\n\n    // Pairwise comparisons for each possible pair of inputs\n    assign out[24] = ~(a ^ a); // a compared with a\n    assign out[23] = ~(a ^ b); // a compared with b\n    assign out[22] = ~(a ^ c); // a compared with c\n    assign out[21] = ~(a ^ d); // a compared with d\n    assign out[20] = ~(a ^ e); // a compared with e\n\n    assign out[19] = ~(b ^ a); // b compared with a\n    assign out[18] = ~(b ^ b); // b compared with b\n    assign out[17] = ~(b ^ c); // b compared with c\n    assign out[16] = ~(b ^ d); // b compared with d\n    assign out[15] = ~(b ^ e); // b compared with e\n\n    assign out[14] = ~(c ^ a); // c compared with a\n    assign out[13] = ~(c ^ b); // c compared with b\n    assign out[12] = ~(c ^ c); // c compared with c\n    assign out[11] = ~(c ^ d); // c compared with d\n    assign out[10] = ~(c ^ e); // c compared with e\n\n    assign out[9]  = ~(d ^ a); // d compared with a\n    assign out[8]  = ~(d ^ b); // d compared with b\n    assign out[7]  = ~(d ^ c); // d compared with c\n    assign out[6]  = ~(d ^ d); // d compared with d\n    assign out[5]  = ~(d ^ e); // d compared with e\n\n    assign out[4]  = ~(e ^ a); // e compared with a\n    assign out[3]  = ~(e ^ b); // e compared with b\n    assign out[2]  = ~(e ^ c); // e compared with c\n    assign out[1]  = ~(e ^ d); // e compared with d\n    assign out[0]  = ~(e ^ e); // e compared with e\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "."
    }
}