<ENHANCED_SPEC>
Implement a Verilog module named `TopModule` with the following specifications. All input and output ports are explicitly defined with their respective bit widths and functionalities:

1. **Ports:**
   - `input [2:0] a`: A 3-bit input vector where `a[2]` is the most significant bit and `a[0]` is the least significant bit.
   - `input [2:0] b`: A 3-bit input vector where `b[2]` is the most significant bit and `b[0]` is the least significant bit.
   - `output [2:0] out_or_bitwise`: A 3-bit output vector representing the bitwise OR of `a` and `b`.
   - `output out_or_logical`: A 1-bit output representing the logical OR of the entire `a` and `b` vectors. This output is high if any bit in `a` or `b` is high.
   - `output [5:0] out_not`: A 6-bit output vector, where:
     - `out_not[5:3]` contains the bitwise NOT of `b`.
     - `out_not[2:0]` contains the bitwise NOT of `a`.

2. **Logic Descriptions:**
   - **Bitwise OR Operation:** `out_or_bitwise` is computed by performing a bitwise OR operation between corresponding bits of the `a` and `b` inputs. Formally, `out_or_bitwise[i] = a[i] | b[i]` for `i = 0, 1, 2`.
   
   - **Logical OR Operation:** `out_or_logical` is computed as `|(a | b)`. This operation evaluates to 1 if any bit in the concatenated vector `[a, b]` is 1, otherwise it is 0.

   - **Bitwise NOT Operation:** The bitwise NOT operation is applied separately to each input vector `a` and `b`. 
     - For `b`, the result is stored in the upper half of `out_not`, specifically `out_not[5:3] = ~b`.
     - For `a`, the result is stored in the lower half of `out_not`, specifically `out_not[2:0] = ~a`.

3. **Additional Notes:**
   - All operations are combinational. There are no sequential elements, clocks, or resets involved in this module's design.
   - Ensure correct bit indexing and propagation according to the specified MSB/LSB conventions.
</ENHANCED_SPEC>