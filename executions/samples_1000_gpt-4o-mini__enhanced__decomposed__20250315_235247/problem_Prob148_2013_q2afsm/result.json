{
    "code": "module TopModule (\n    input logic clk,\n    input logic resetn,\n    input logic [2:0] r,\n    output logic [2:0] g\n);\n    // State encoding\n    typedef enum logic [1:0] {\n        A = 2'b00,\n        B = 2'b01,\n        C = 2'b10,\n        D = 2'b11\n    } state_t;\n\n    state_t current_state, next_state;\n\n    // State flip-flops with synchronous reset\n    always @(posedge clk) begin\n        if (!resetn)\n            current_state <= A; // Reset to state A\n        else\n            current_state <= next_state; // Update to next state\n    end\n\n    // Next state logic\n    always @(*) begin\n        case (current_state)\n            A: begin\n                if (r[0]) \n                    next_state = B; // Grant to device 0\n                else if (r[1]) \n                    next_state = C; // Grant to device 1\n                else if (r[2]) \n                    next_state = D; // Grant to device 2\n                else \n                    next_state = A; // Stay in state A\n            end\n            B: begin\n                if (r[0]) \n                    next_state = B; // Stay in state B\n                else \n                    next_state = A; // Go back to state A\n            end\n            C: begin\n                if (r[1]) \n                    next_state = C; // Stay in state C\n                else \n                    next_state = A; // Go back to state A\n            end\n            D: begin\n                next_state = A; // Go back to state A from D\n            end\n            default: next_state = A; // Default to state A\n        endcase\n    end\n\n    // Output logic\n    always @(*) begin\n        g = 3'b000; // Default output\n        case (current_state)\n            B: g[0] = 1'b1; // Grant for device 0\n            C: g[1] = 1'b1; // Grant for device 1\n            D: g[2] = 1'b1; // Grant for device 2\n            default: g = 3'b000; // No grants\n        endcase\n    end\nendmodule",
    "test_results": {
        "num_mismatch": 56,
        "passfail": "R"
    }
}