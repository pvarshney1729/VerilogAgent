{
    "code": "module TopModule(\n    input logic clk,\n    input logic reset,\n    input logic [7:0] in,\n    output logic done\n);\n    typedef enum logic [1:0] {\n        IDLE   = 2'b00,\n        BYTE1  = 2'b01,\n        BYTE2  = 2'b10,\n        DONE   = 2'b11\n    } state_t;\n\n    state_t current_state, next_state;\n\n    always_ff @(posedge clk) begin\n        if (reset) begin\n            current_state <= IDLE;\n        end else begin\n            current_state <= next_state;\n        end\n    end\n\n    always_comb begin\n        case (current_state)\n            IDLE: begin\n                if (in[3] == 1) begin\n                    next_state = BYTE1;\n                end else begin\n                    next_state = IDLE;\n                end\n            end\n            BYTE1: begin\n                next_state = BYTE2;\n            end\n            BYTE2: begin\n                next_state = DONE;\n            end\n            DONE: begin\n                next_state = IDLE; // Reset to IDLE after signaling done\n            end\n            default: next_state = IDLE;\n        endcase\n    end\n\n    assign done = (current_state == DONE);\n\nendmodule",
    "test_results": {
        "num_mismatch": 68,
        "passfail": "R"
    }
}