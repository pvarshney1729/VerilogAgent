{
    "code": "module TopModule(\n    input logic clk,\n    input logic reset,\n    input logic in,\n    output logic out\n);\n    typedef enum logic [1:0] {A, B, C, D} state_t;\n    state_t current_state, next_state;\n\n    // Synchronous reset and state update\n    always @(posedge clk) begin\n        if (reset) begin\n            current_state <= A; // Reset to state A\n        end else begin\n            current_state <= next_state; // Update to next state\n        end\n    end\n\n    // Next state logic\n    always @(*) begin\n        case (current_state)\n            A: next_state = (in == 1'b0) ? A : B;\n            B: next_state = (in == 1'b0) ? C : B;\n            C: next_state = (in == 1'b0) ? A : D;\n            D: next_state = (in == 1'b0) ? C : B;\n            default: next_state = A; // Default case for safety\n        endcase\n    end\n\n    // Output logic\n    assign out = (current_state == D) ? 1'b1 : 1'b0;\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "e"
    }
}