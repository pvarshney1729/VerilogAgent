{
    "code": "module TopModule(\n    input logic clk,\n    input logic reset,\n    input logic j,\n    input logic k,\n    output logic out\n);\n    typedef enum logic [1:0] {OFF = 1'b0, ON = 1'b1} state_t;\n    state_t current_state, next_state;\n\n    // State register with synchronous reset\n    always @(posedge clk) begin\n        if (reset) begin\n            current_state <= OFF; // Reset to OFF state\n        end else begin\n            current_state <= next_state; // Update to next state\n        end\n    end\n\n    // Next state logic\n    always @(*) begin\n        case (current_state)\n            OFF: begin\n                if (j) begin\n                    next_state = ON; // Transition to ON state\n                end else begin\n                    next_state = OFF; // Remain in OFF state\n                end\n            end\n            ON: begin\n                if (k) begin\n                    next_state = OFF; // Transition to OFF state\n                end else begin\n                    next_state = ON; // Remain in ON state\n                end\n            end\n            default: begin\n                next_state = OFF; // Default to OFF state\n            end\n        endcase\n    end\n\n    // Output logic based on current state\n    always @(*) begin\n        case (current_state)\n            OFF: out = 1'b0; // Output is 0 in OFF state\n            ON:  out = 1'b1; // Output is 1 in ON state\n            default: out = 1'b0; // Default output\n        endcase\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "C"
    }
}