<ENHANCED_SPEC>
Module Name: TopModule

Interface:
- Inputs:
  - `input wire d` (1 bit): Input condition for state transitions.
  - `input wire done_counting` (1 bit): Indicates if the counting process is complete.
  - `input wire ack` (1 bit): Acknowledgment signal to transition from Wait to S state.
  - `input wire [9:0] state`: One-hot encoded current state of the state machine.

- Outputs:
  - `output wire B3_next` (1 bit): Asserted if the next state is B3.
  - `output wire S_next` (1 bit): Asserted if the next state is S.
  - `output wire S1_next` (1 bit): Asserted if the next state is S1.
  - `output wire Count_next` (1 bit): Asserted if the next state is Count.
  - `output wire Wait_next` (1 bit): Asserted if the next state is Wait.
  - `output wire done` (1 bit): Asserted when the state machine is in Wait state.
  - `output wire counting` (1 bit): Asserted when the state machine is in Count state.
  - `output wire shift_ena` (1 bit): Asserted during states B0 to B3 to enable shift operations.

State Machine Details:
- Type: Moore state machine

State Encoding (One-hot):
- S     = 10'b0000000001
- S1    = 10'b0000000010
- S11   = 10'b0000000100
- S110  = 10'b0000001000
- B0    = 10'b0000010000
- B1    = 10'b0000100000
- B2    = 10'b0001000000
- B3    = 10'b0010000000
- Count = 10'b0100000000
- Wait  = 10'b1000000000

State Transitions:
- S     -- d=0 --> S
- S     -- d=1 --> S1
- S1    -- d=0 --> S
- S1    -- d=1 --> S11
- S11   -- d=0 --> S110
- S11   -- d=1 --> S11
- S110  -- d=0 --> S
- S110  -- d=1 --> B0
- B0    -- always --> B1
- B1    -- always --> B2
- B2    -- always --> B3
- B3    -- always --> Count
- Count -- done_counting=0 --> Count
- Count -- done_counting=1 --> Wait
- Wait  -- ack=0 --> Wait
- Wait  -- ack=1 --> S

Reset Behavior:
- On reset, the state machine initializes to state "S".

Output Logic:
- `B3_next`: Asserted if the next state transitions to B3.
- `S_next`: Asserted if the next state transitions to S.
- `S1_next`: Asserted if the next state transitions to S1.
- `Count_next`: Asserted if the next state transitions to Count.
- `Wait_next`: Asserted if the next state transitions to Wait.
- `done`: Asserted when the current state is Wait.
- `counting`: Asserted when the current state is Count.
- `shift_ena`: Asserted when the current state is B0, B1, B2, or B3.

Ensure all transitions and conditions are accurately handled in the implementation. The reset is synchronous, and all signals should be correctly initialized as per the state machine's starting state.
</ENHANCED_SPEC>