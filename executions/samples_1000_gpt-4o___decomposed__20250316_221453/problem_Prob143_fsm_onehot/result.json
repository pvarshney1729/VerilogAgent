{
    "code": "module TopModule(\n    input logic in,\n    input logic [9:0] state,\n    output logic [9:0] next_state,\n    output logic out1,\n    output logic out2\n);\n\n    always @(*) begin\n        // Default values\n        next_state = 10'b0;\n        out1 = 0;\n        out2 = 0;\n\n        case (state)\n            10'b0000000001: next_state = in ? 10'b0000000010 : 10'b0000000001; // S0\n            10'b0000000010: next_state = in ? 10'b0000000100 : 10'b0000000001; // S1\n            10'b0000000100: next_state = in ? 10'b0000001000 : 10'b0000000001; // S2\n            10'b0000001000: next_state = in ? 10'b0000010000 : 10'b0000000001; // S3\n            10'b0000010000: next_state = in ? 10'b0000100000 : 10'b0000000001; // S4\n            10'b0000100000: next_state = in ? 10'b0001000000 : 10'b1000000000; // S5\n            10'b0001000000: next_state = in ? 10'b0010000000 : 10'b0100000000; // S6\n            10'b0010000000: begin // S7\n                next_state = in ? 10'b0010000000 : 10'b0000000001;\n                out2 = 1;\n            end\n            10'b0100000000: begin // S8\n                next_state = in ? 10'b0000000010 : 10'b0000000001;\n                out1 = 1;\n            end\n            10'b1000000000: begin // S9\n                next_state = in ? 10'b0000000010 : 10'b0000000001;\n                out1 = 1;\n                out2 = 1;\n            end\n            default: next_state = 10'b0000000001; // Default to S0\n        endcase\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "C"
    }
}