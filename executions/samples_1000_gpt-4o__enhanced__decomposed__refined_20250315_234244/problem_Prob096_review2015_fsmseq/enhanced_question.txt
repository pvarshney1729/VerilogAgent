<ENHANCED_SPEC>
The module to be implemented is named `TopModule` and has the following interface. Unless otherwise specified, all input and output ports are 1-bit wide.

- Input Ports:
  - `clk`: Clock signal, used for synchronizing all sequential logic, active on the rising edge.
  - `reset`: Active-high synchronous reset signal, which resets the state machine and output.
  - `data`: Input bit stream to be analyzed for the sequence detection.

- Output Ports:
  - `start_shifting`: Output signal, set to 1 when the sequence 1101 is detected in the input stream, remains 1 until reset.

The module must implement a finite-state machine (FSM) to detect the sequence "1101" in the `data` bit stream. The FSM should transition through states as follows to detect the pattern:
1. **Initial State (S0):** Await the start of the sequence.
2. **State S1:** Transition from S0 to S1 on receiving '1'.
3. **State S2:** Transition from S1 to S2 on receiving another '1'.
4. **State S3:** Transition from S2 to S3 on receiving '0'.
5. **State S4:** Transition from S3 to S4 on receiving '1'. On entering this state, the sequence 1101 has been detected.

Upon detection, the `start_shifting` output should be set to 1 and remain 1 until a reset occurs. 

- The FSM must return to the Initial State (S0) upon receiving a reset signal, which is synchronous and active-high.
- Ensure that all sequential logic is triggered on the positive edge of `clk`.
- All state transitions should be clearly defined with no ambiguity or race conditions.
- Proper handling of the reset state is required to ensure that `start_shifting` is initialized to 0 upon reset.

Edge cases, such as overlapping sequence detection, should be handled according to the FSM state definitions, ensuring robustness in detection.

The specification clarifies that the reset condition sets both the FSM and `start_shifting` to their initial states. The design should avoid any unintended latching or race conditions, ensuring reliable operation across all clock cycles and state transitions.
</ENHANCED_SPEC>