{
    "code": "module TopModule (\n    input logic clk,         // Clock signal, positive edge-triggered\n    input logic resetn,      // Active-low synchronous reset\n    input logic in,          // Input signal to be shifted into the register\n    output logic out         // Output signal representing the most significant bit of the shift register\n);\n\n    // 4-bit shift register\n    logic [3:0] shift_register;\n\n    // Sequential logic for shift register with synchronous reset\n    always_ff @(posedge clk) begin\n        if (!resetn) begin\n            shift_register <= 4'b0000; // Reset to all zeros\n        end else begin\n            shift_register <= {shift_register[2:0], in}; // Shift right and input new bit\n        end\n    end\n\n    // Assign the most significant bit to the output\n    assign out = shift_register[3];\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "."
    },
    "iterations_used": 1
}