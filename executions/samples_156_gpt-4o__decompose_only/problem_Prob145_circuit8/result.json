{
    "code": "module TopModule (\n    input logic clock,\n    input logic a,\n    output logic p,\n    output logic q\n);\n\n    // State encoding\n    typedef enum logic [1:0] {\n        S0 = 2'b00,\n        S1 = 2'b01,\n        S2 = 2'b10,\n        S3 = 2'b11\n    } state_t;\n\n    state_t state, next_state;\n\n    // State transition logic\n    always_ff @(posedge clock) begin\n        state <= next_state;\n    end\n\n    // Next state logic\n    always_comb begin\n        case (state)\n            S0: if (a) next_state = S1; else next_state = S0;\n            S1: if (a) next_state = S2; else next_state = S0;\n            S2: if (a) next_state = S3; else next_state = S0;\n            S3: if (a) next_state = S1; else next_state = S0;\n            default: next_state = S0;\n        endcase\n    end\n\n    // Output logic\n    always_comb begin\n        case (state)\n            S0: begin p = 0; q = 0; end\n            S1: begin p = 1; q = 0; end\n            S2: begin p = 1; q = 1; end\n            S3: begin p = 0; q = 1; end\n            default: begin p = 0; q = 0; end\n        endcase\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 173,
        "passfail": "R"
    }
}