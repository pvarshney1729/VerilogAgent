{
    "code": "module TopModule (\n    input logic clk,\n    input logic reset,\n    output logic [31:0] q\n);\n\n    logic [31:0] lfsr_reg, lfsr_next;\n\n    // Sequential logic for LFSR with synchronous reset\n    always @(posedge clk) begin\n        if (reset) begin\n            lfsr_reg <= 32'h1; // Reset to 32'h1\n        end else begin\n            lfsr_reg <= lfsr_next;\n        end\n    end\n\n    // Combinational logic to calculate the next state of the LFSR\n    always @(*) begin\n        lfsr_next[31] = lfsr_reg[0] ^ lfsr_reg[31]; // Tap at bit 32\n        lfsr_next[30] = lfsr_reg[31];\n        lfsr_next[29] = lfsr_reg[30];\n        lfsr_next[28] = lfsr_reg[29];\n        lfsr_next[27] = lfsr_reg[28];\n        lfsr_next[26] = lfsr_reg[27];\n        lfsr_next[25] = lfsr_reg[26];\n        lfsr_next[24] = lfsr_reg[25];\n        lfsr_next[23] = lfsr_reg[24];\n        lfsr_next[22] = lfsr_reg[0] ^ lfsr_reg[23]; // Tap at bit 22\n        lfsr_next[21] = lfsr_reg[22];\n        lfsr_next[20] = lfsr_reg[21];\n        lfsr_next[19] = lfsr_reg[20];\n        lfsr_next[18] = lfsr_reg[19];\n        lfsr_next[17] = lfsr_reg[18];\n        lfsr_next[16] = lfsr_reg[17];\n        lfsr_next[15] = lfsr_reg[16];\n        lfsr_next[14] = lfsr_reg[15];\n        lfsr_next[13] = lfsr_reg[14];\n        lfsr_next[12] = lfsr_reg[13];\n        lfsr_next[11] = lfsr_reg[12];\n        lfsr_next[10] = lfsr_reg[11];\n        lfsr_next[9]  = lfsr_reg[10];\n        lfsr_next[8]  = lfsr_reg[9];\n        lfsr_next[7]  = lfsr_reg[8];\n        lfsr_next[6]  = lfsr_reg[7];\n        lfsr_next[5]  = lfsr_reg[6];\n        lfsr_next[4]  = lfsr_reg[5];\n        lfsr_next[3]  = lfsr_reg[4];\n        lfsr_next[2]  = lfsr_reg[3];\n        lfsr_next[1]  = lfsr_reg[0] ^ lfsr_reg[2];  // Tap at bit 2\n        lfsr_next[0]  = lfsr_reg[0] ^ lfsr_reg[1];  // Tap at bit 1\n    end\n\n    // Assign the current state of the LFSR to the output\n    assign q = lfsr_reg;\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "T"
    }
}