Decomposition Result:[
    {
        "id": "1",
        "content": "Define the module TopModule with input ports clk, d, r and output port q.",
        "source": "I would like you to implement a module named TopModule with the following interface. All input and output ports are one bit unless otherwise specified. - input  clk - input  d - input  r - output q",
        "implementation": "module TopModule (\n    input clk,\n    input d,\n    input r,\n    output reg q\n);\n\nalways @(posedge clk) begin\n    if (r)\n        q <= 1'b0;\n    else\n        q <= d;\nend\n\nendmodule"
    },
    {
        "id": "2",
        "content": "Implement the D flip-flop logic that captures the value of input d on the rising edge of clk.",
        "source": "The module should implement a simple D flip flop with active high synchronous reset (reset output to 0).",
        "implementation": "always @(posedge clk) begin\n    if (r) \n        q <= 1'b0;\n    else \n        q <= d;\nend"
    },
    {
        "id": "3",
        "content": "Implement the synchronous reset logic to set the output q to 0 when r is high on the rising edge of clk.",
        "source": "The module should implement a simple D flip flop with active high synchronous reset (reset output to 0).",
        "implementation": "always @(posedge clk) begin\n    if (r) begin\n        q <= 1'b0;\n    end else begin\n        q <= d;\n    end\nend"
    }
]

Modified Base Query:


I would like you to implement a module named TopModule with the following
interface. All input and output ports are one bit unless otherwise
specified.

 - input  clk
 - input  d
 - input  r
 - output q

The module should implement a simple D flip flop with active high
synchronous reset (reset output to 0).

