{
    "code": "[BEGIN]\nmodule TopModule (\n    input logic d,\n    input logic done_counting,\n    input logic ack,\n    input logic [9:0] state,\n    output logic B3_next,\n    output logic S_next,\n    output logic S1_next,\n    output logic Count_next,\n    output logic Wait_next,\n    output logic done,\n    output logic counting,\n    output logic shift_ena\n);\n\n    logic [9:0] next_state;\n\n    always @(*) begin\n        // Default assignments\n        B3_next = 1'b0;\n        S_next = 1'b0;\n        S1_next = 1'b0;\n        Count_next = 1'b0;\n        Wait_next = 1'b0;\n        done = 1'b0;\n        counting = 1'b0;\n        shift_ena = 1'b0;\n        next_state = state;\n\n        // State transition logic\n        case (state)\n            10'b0000000001: begin // S\n                if (d == 1'b0) begin\n                    S_next = 1'b1;\n                    next_state = 10'b0000000001; // Stay in S\n                end else begin\n                    S1_next = 1'b1;\n                    next_state = 10'b0000000010; // Go to S1\n                end\n            end\n            10'b0000000010: begin // S1\n                if (d == 1'b0) begin\n                    S_next = 1'b1;\n                    next_state = 10'b0000000001; // Go to S\n                end else begin\n                    next_state = 10'b0000000100; // Go to S11\n                end\n            end\n            10'b0000000100: begin // S11\n                if (d == 1'b0) begin\n                    next_state = 10'b0000001000; // Go to S110\n                end else begin\n                    next_state = 10'b0000000100; // Stay in S11\n                end\n            end\n            10'b0000001000: begin // S110\n                if (d == 1'b0) begin\n                    S_next = 1'b1;\n                    next_state = 10'b0000000001; // Go to S\n                end else begin\n                    next_state = 10'b0000010000; // Go to B0\n                end\n            end\n            10'b0000010000: begin // B0\n                shift_ena = 1'b1;\n                next_state = 10'b0000100000; // Go to B1\n            end\n            10'b0000100000: begin // B1\n                shift_ena = 1'b1;\n                next_state = 10'b0001000000; // Go to B2\n            end\n            10'b0001000000: begin // B2\n                shift_ena = 1'b1;\n                next_state = 10'b0010000000; // Go to B3\n            end\n            10'b0010000000: begin // B3\n                shift_ena = 1'b1;\n                B3_next = 1'b1;\n                next_state = 10'b0100000000; // Go to Count\n            end\n            10'b0100000000: begin // Count\n                counting = 1'b1;\n                if (done_counting == 1'b0) begin\n                    Count_next = 1'b1;\n                    next_state = 10'b0100000000; // Stay in Count\n                end else begin\n                    next_state = 10'b1000000000; // Go to Wait\n                end\n            end\n            10'b1000000000: begin // Wait\n                done = 1'b1;\n                if (ack == 1'b0) begin\n                    Wait_next = 1'b1;\n                    next_state = 10'b1000000000; // Stay in Wait\n                end else begin\n                    S_next = 1'b1;\n                    next_state = 10'b0000000001; // Go to S\n                end\n            end\n            default: begin\n                S_next = 1'b1; // Default to S state\n                next_state = 10'b0000000001; // Go to S\n            end\n        endcase\n    end\n\nendmodule\n[DONE]",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "S"
    },
    "iterations": [
        {
            "iteration": 0,
            "code": "```verilog\nmodule TopModule (\n    input logic d,\n    input logic done_counting,\n    input logic ack,\n    input logic [9:0] state,\n    output logic B3_next,\n    output logic S_next,\n    output logic S1_next,\n    output logic Count_next,\n    output logic Wait_next,\n    output logic done,\n    output logic counting,\n    output logic shift_ena\n);\n\n    always @(*) begin\n        // Default assignments\n        B3_next = 1'b0;\n        S_next = 1'b0;\n        S1_next = 1'b0;\n        Count_next = 1'b0;\n        Wait_next = 1'b0;\n        done = 1'b0;\n        counting = 1'b0;\n        shift_ena = 1'b0;\n\n        // State transition logic\n        case (state)\n            10'b0000000001: begin // S\n                if (d == 1'b0)\n                    S_next = 1'b1;\n                else\n                    S1_next = 1'b1;\n            end\n            10'b0000000010: begin // S1\n                if (d == 1'b0)\n                    S_next = 1'b1;\n                else\n                    state[2] = 1'b1; // S11\n            end\n            10'b0000000100: begin // S11\n                if (d == 1'b0)\n                    state[3] = 1'b1; // S110\n                else\n                    state[2] = 1'b1; // S11\n            end\n            10'b0000001000: begin // S110\n                if (d == 1'b0)\n                    S_next = 1'b1;\n                else\n                    state[4] = 1'b1; // B0\n            end\n            10'b0000010000: begin // B0\n                shift_ena = 1'b1;\n                state[5] = 1'b1; // B1\n            end\n            10'b0000100000: begin // B1\n                shift_ena = 1'b1;\n                state[6] = 1'b1; // B2\n            end\n            10'b0001000000: begin // B2\n                shift_ena = 1'b1;\n                state[7] = 1'b1; // B3\n            end\n            10'b0010000000: begin // B3\n                shift_ena = 1'b1;\n                B3_next = 1'b1;\n                state[8] = 1'b1; // Count\n            end\n            10'b0100000000: begin // Count\n                counting = 1'b1;\n                if (done_counting == 1'b0)\n                    Count_next = 1'b1;\n                else\n                    state[9] = 1'b1; // Wait\n            end\n            10'b1000000000: begin // Wait\n                done = 1'b1;\n                if (ack == 1'b0)\n                    Wait_next = 1'b1;\n                else\n                    S_next = 1'b1;\n            end\n            default: begin\n                S_next = 1'b1; // Default to S state\n            end\n        endcase\n    end\n\nendmodule\n```",
            "issues": [
                "syntax_error: error:",
                "wire_error: is declared here as wire"
            ]
        },
        {
            "iteration": 1,
            "code": "[BEGIN]\nmodule TopModule (\n    input logic d,\n    input logic done_counting,\n    input logic ack,\n    input logic [9:0] state,\n    output logic B3_next,\n    output logic S_next,\n    output logic S1_next,\n    output logic Count_next,\n    output logic Wait_next,\n    output logic done,\n    output logic counting,\n    output logic shift_ena\n);\n\n    logic [9:0] next_state;\n\n    always @(*) begin\n        // Default assignments\n        B3_next = 1'b0;\n        S_next = 1'b0;\n        S1_next = 1'b0;\n        Count_next = 1'b0;\n        Wait_next = 1'b0;\n        done = 1'b0;\n        counting = 1'b0;\n        shift_ena = 1'b0;\n        next_state = state;\n\n        // State transition logic\n        case (state)\n            10'b0000000001: begin // S\n                if (d == 1'b0) begin\n                    S_next = 1'b1;\n                    next_state = 10'b0000000001; // Stay in S\n                end else begin\n                    S1_next = 1'b1;\n                    next_state = 10'b0000000010; // Go to S1\n                end\n            end\n            10'b0000000010: begin // S1\n                if (d == 1'b0) begin\n                    S_next = 1'b1;\n                    next_state = 10'b0000000001; // Go to S\n                end else begin\n                    next_state = 10'b0000000100; // Go to S11\n                end\n            end\n            10'b0000000100: begin // S11\n                if (d == 1'b0) begin\n                    next_state = 10'b0000001000; // Go to S110\n                end else begin\n                    next_state = 10'b0000000100; // Stay in S11\n                end\n            end\n            10'b0000001000: begin // S110\n                if (d == 1'b0) begin\n                    S_next = 1'b1;\n                    next_state = 10'b0000000001; // Go to S\n                end else begin\n                    next_state = 10'b0000010000; // Go to B0\n                end\n            end\n            10'b0000010000: begin // B0\n                shift_ena = 1'b1;\n                next_state = 10'b0000100000; // Go to B1\n            end\n            10'b0000100000: begin // B1\n                shift_ena = 1'b1;\n                next_state = 10'b0001000000; // Go to B2\n            end\n            10'b0001000000: begin // B2\n                shift_ena = 1'b1;\n                next_state = 10'b0010000000; // Go to B3\n            end\n            10'b0010000000: begin // B3\n                shift_ena = 1'b1;\n                B3_next = 1'b1;\n                next_state = 10'b0100000000; // Go to Count\n            end\n            10'b0100000000: begin // Count\n                counting = 1'b1;\n                if (done_counting == 1'b0) begin\n                    Count_next = 1'b1;\n                    next_state = 10'b0100000000; // Stay in Count\n                end else begin\n                    next_state = 10'b1000000000; // Go to Wait\n                end\n            end\n            10'b1000000000: begin // Wait\n                done = 1'b1;\n                if (ack == 1'b0) begin\n                    Wait_next = 1'b1;\n                    next_state = 10'b1000000000; // Stay in Wait\n                end else begin\n                    S_next = 1'b1;\n                    next_state = 10'b0000000001; // Go to S\n                end\n            end\n            default: begin\n                S_next = 1'b1; // Default to S state\n                next_state = 10'b0000000001; // Go to S\n            end\n        endcase\n    end\n\nendmodule\n[DONE]",
            "issues": []
        }
    ],
    "refinement_count": 1,
    "remaining_issues": [],
    "testbench_results": {
        "passed": false,
        "output": "Time 40000: Inputs\n            d = 00000001\n            done_counting = 00000000\n            ack = 00000000\n            state = 0000000a\nTime 40000: Output S_next = 1\nTime 60000: Inputs\n            d = 00000001\n            done_counting = 00000000\n            ack = 00000000\n            state = 00000064\nTime 60000: Output S_next = 1\nTime 70000: Inputs\n            d = 00000000\n            done_counting = 00000000\n            ack = 00000000\n            state = 00000064\nTime 70000: Output S_next = 1\nTime 80000: Inputs\n            d = 00000001\n            done_counting = 00000000\n            ack = 00000000\n            state = 000003e8\nTime 80000: Output S_next = 1\nTime 80000: Inputs\n            d = 00000001\n            done_counting = 00000000\n            ack = 00000000\n            state = 000003e8\nTime 80000: Output shift_ena = 0\nSimulation finished at 80 ps\nTEST FAILED with 5 errors\n",
        "testbench": "`timescale 1ns/1ps\n\nmodule TopModule_tb;\n\n    logic  d;\n    logic  done_counting;\n    logic  ack;\n    logic [9:0] state;\n    logic  B3_next;\n    logic  S_next;\n    logic  S1_next;\n    logic  Count_next;\n    logic  Wait_next;\n    logic  done;\n    logic  counting;\n    logic  shift_ena;\n\n    // Stats for tracking errors\n      int errors;\n    // Instantiate the Device Under Test (DUT)\n    TopModule dut (\n        .d(d),\n        .done_counting(done_counting),\n        .ack(ack),\n        .state(state),\n        .B3_next(B3_next),\n        .S_next(S_next),\n        .S1_next(S1_next),\n        .Count_next(Count_next),\n        .Wait_next(Wait_next),\n        .done(done),\n        .counting(counting),\n        .shift_ena(shift_ena)\n    );\n\n    // Test stimulus\n    initial begin\n        // Initialize inputs\n        d = 1'b0;\n        done_counting = 1'b0;\n        ack = 1'b0;\n        state = 10'b0;\n\n        // Wait for reset\n        #10;\n\n        // Apply input stimulus\n        d = 0;\n        done_counting = 0;\n        ack = 0;\n        state = 0000000001;\n        #10;\n\n        // Check output\n        if (B3_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 0);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000001);\n            $display(\"Time %0t: Output %s = %h\", $time, \"B3_next\", B3_next);\n            errors++;\n        end\n        if (S_next !== 1) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 0);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000001);\n            $display(\"Time %0t: Output %s = %h\", $time, \"S_next\", S_next);\n            errors++;\n        end\n        if (S1_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 0);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000001);\n            $display(\"Time %0t: Output %s = %h\", $time, \"S1_next\", S1_next);\n            errors++;\n        end\n        if (Count_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 0);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000001);\n            $display(\"Time %0t: Output %s = %h\", $time, \"Count_next\", Count_next);\n            errors++;\n        end\n        if (Wait_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 0);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000001);\n            $display(\"Time %0t: Output %s = %h\", $time, \"Wait_next\", Wait_next);\n            errors++;\n        end\n        if (done !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 0);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000001);\n            $display(\"Time %0t: Output %s = %h\", $time, \"done\", done);\n            errors++;\n        end\n        if (counting !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 0);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000001);\n            $display(\"Time %0t: Output %s = %h\", $time, \"counting\", counting);\n            errors++;\n        end\n        if (shift_ena !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 0);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000001);\n            $display(\"Time %0t: Output %s = %h\", $time, \"shift_ena\", shift_ena);\n            errors++;\n        end\n\n        // Apply input stimulus\n        d = 1;\n        done_counting = 0;\n        ack = 0;\n        state = 0000000001;\n        #10;\n\n        // Check output\n        if (B3_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000001);\n            $display(\"Time %0t: Output %s = %h\", $time, \"B3_next\", B3_next);\n            errors++;\n        end\n        if (S_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000001);\n            $display(\"Time %0t: Output %s = %h\", $time, \"S_next\", S_next);\n            errors++;\n        end\n        if (S1_next !== 1) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000001);\n            $display(\"Time %0t: Output %s = %h\", $time, \"S1_next\", S1_next);\n            errors++;\n        end\n        if (Count_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000001);\n            $display(\"Time %0t: Output %s = %h\", $time, \"Count_next\", Count_next);\n            errors++;\n        end\n        if (Wait_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000001);\n            $display(\"Time %0t: Output %s = %h\", $time, \"Wait_next\", Wait_next);\n            errors++;\n        end\n        if (done !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000001);\n            $display(\"Time %0t: Output %s = %h\", $time, \"done\", done);\n            errors++;\n        end\n        if (counting !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000001);\n            $display(\"Time %0t: Output %s = %h\", $time, \"counting\", counting);\n            errors++;\n        end\n        if (shift_ena !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000001);\n            $display(\"Time %0t: Output %s = %h\", $time, \"shift_ena\", shift_ena);\n            errors++;\n        end\n\n        // Apply input stimulus\n        d = 1;\n        done_counting = 0;\n        ack = 0;\n        state = 0000000010;\n        #10;\n\n        // Check output\n        if (B3_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000010);\n            $display(\"Time %0t: Output %s = %h\", $time, \"B3_next\", B3_next);\n            errors++;\n        end\n        if (S_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000010);\n            $display(\"Time %0t: Output %s = %h\", $time, \"S_next\", S_next);\n            errors++;\n        end\n        if (S1_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000010);\n            $display(\"Time %0t: Output %s = %h\", $time, \"S1_next\", S1_next);\n            errors++;\n        end\n        if (Count_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000010);\n            $display(\"Time %0t: Output %s = %h\", $time, \"Count_next\", Count_next);\n            errors++;\n        end\n        if (Wait_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000010);\n            $display(\"Time %0t: Output %s = %h\", $time, \"Wait_next\", Wait_next);\n            errors++;\n        end\n        if (done !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000010);\n            $display(\"Time %0t: Output %s = %h\", $time, \"done\", done);\n            errors++;\n        end\n        if (counting !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000010);\n            $display(\"Time %0t: Output %s = %h\", $time, \"counting\", counting);\n            errors++;\n        end\n        if (shift_ena !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000010);\n            $display(\"Time %0t: Output %s = %h\", $time, \"shift_ena\", shift_ena);\n            errors++;\n        end\n\n        // Apply input stimulus\n        d = 0;\n        done_counting = 0;\n        ack = 0;\n        state = 0000000010;\n        #10;\n\n        // Check output\n        if (B3_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 0);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000010);\n            $display(\"Time %0t: Output %s = %h\", $time, \"B3_next\", B3_next);\n            errors++;\n        end\n        if (S_next !== 1) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 0);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000010);\n            $display(\"Time %0t: Output %s = %h\", $time, \"S_next\", S_next);\n            errors++;\n        end\n        if (S1_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 0);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000010);\n            $display(\"Time %0t: Output %s = %h\", $time, \"S1_next\", S1_next);\n            errors++;\n        end\n        if (Count_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 0);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000010);\n            $display(\"Time %0t: Output %s = %h\", $time, \"Count_next\", Count_next);\n            errors++;\n        end\n        if (Wait_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 0);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000010);\n            $display(\"Time %0t: Output %s = %h\", $time, \"Wait_next\", Wait_next);\n            errors++;\n        end\n        if (done !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 0);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000010);\n            $display(\"Time %0t: Output %s = %h\", $time, \"done\", done);\n            errors++;\n        end\n        if (counting !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 0);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000010);\n            $display(\"Time %0t: Output %s = %h\", $time, \"counting\", counting);\n            errors++;\n        end\n        if (shift_ena !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 0);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000010);\n            $display(\"Time %0t: Output %s = %h\", $time, \"shift_ena\", shift_ena);\n            errors++;\n        end\n\n        // Apply input stimulus\n        d = 1;\n        done_counting = 0;\n        ack = 0;\n        state = 0000000100;\n        #10;\n\n        // Check output\n        if (B3_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000100);\n            $display(\"Time %0t: Output %s = %h\", $time, \"B3_next\", B3_next);\n            errors++;\n        end\n        if (S_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000100);\n            $display(\"Time %0t: Output %s = %h\", $time, \"S_next\", S_next);\n            errors++;\n        end\n        if (S1_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000100);\n            $display(\"Time %0t: Output %s = %h\", $time, \"S1_next\", S1_next);\n            errors++;\n        end\n        if (Count_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000100);\n            $display(\"Time %0t: Output %s = %h\", $time, \"Count_next\", Count_next);\n            errors++;\n        end\n        if (Wait_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000100);\n            $display(\"Time %0t: Output %s = %h\", $time, \"Wait_next\", Wait_next);\n            errors++;\n        end\n        if (done !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000100);\n            $display(\"Time %0t: Output %s = %h\", $time, \"done\", done);\n            errors++;\n        end\n        if (counting !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000100);\n            $display(\"Time %0t: Output %s = %h\", $time, \"counting\", counting);\n            errors++;\n        end\n        if (shift_ena !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000100);\n            $display(\"Time %0t: Output %s = %h\", $time, \"shift_ena\", shift_ena);\n            errors++;\n        end\n\n        // Apply input stimulus\n        d = 0;\n        done_counting = 0;\n        ack = 0;\n        state = 0000000100;\n        #10;\n\n        // Check output\n        if (B3_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 0);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000100);\n            $display(\"Time %0t: Output %s = %h\", $time, \"B3_next\", B3_next);\n            errors++;\n        end\n        if (S_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 0);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000100);\n            $display(\"Time %0t: Output %s = %h\", $time, \"S_next\", S_next);\n            errors++;\n        end\n        if (S1_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 0);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000100);\n            $display(\"Time %0t: Output %s = %h\", $time, \"S1_next\", S1_next);\n            errors++;\n        end\n        if (Count_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 0);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000100);\n            $display(\"Time %0t: Output %s = %h\", $time, \"Count_next\", Count_next);\n            errors++;\n        end\n        if (Wait_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 0);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000100);\n            $display(\"Time %0t: Output %s = %h\", $time, \"Wait_next\", Wait_next);\n            errors++;\n        end\n        if (done !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 0);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000100);\n            $display(\"Time %0t: Output %s = %h\", $time, \"done\", done);\n            errors++;\n        end\n        if (counting !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 0);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000100);\n            $display(\"Time %0t: Output %s = %h\", $time, \"counting\", counting);\n            errors++;\n        end\n        if (shift_ena !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 0);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000000100);\n            $display(\"Time %0t: Output %s = %h\", $time, \"shift_ena\", shift_ena);\n            errors++;\n        end\n\n        // Apply input stimulus\n        d = 1;\n        done_counting = 0;\n        ack = 0;\n        state = 0000001000;\n        #10;\n\n        // Check output\n        if (B3_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000001000);\n            $display(\"Time %0t: Output %s = %h\", $time, \"B3_next\", B3_next);\n            errors++;\n        end\n        if (S_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000001000);\n            $display(\"Time %0t: Output %s = %h\", $time, \"S_next\", S_next);\n            errors++;\n        end\n        if (S1_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000001000);\n            $display(\"Time %0t: Output %s = %h\", $time, \"S1_next\", S1_next);\n            errors++;\n        end\n        if (Count_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000001000);\n            $display(\"Time %0t: Output %s = %h\", $time, \"Count_next\", Count_next);\n            errors++;\n        end\n        if (Wait_next !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000001000);\n            $display(\"Time %0t: Output %s = %h\", $time, \"Wait_next\", Wait_next);\n            errors++;\n        end\n        if (done !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000001000);\n            $display(\"Time %0t: Output %s = %h\", $time, \"done\", done);\n            errors++;\n        end\n        if (counting !== 0) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000001000);\n            $display(\"Time %0t: Output %s = %h\", $time, \"counting\", counting);\n            errors++;\n        end\n        if (shift_ena !== 1) begin\n            $display(\"Time %0t: Inputs\", $time);\n            $display(\"            %s = %h\", \"d\", 1);\n            $display(\"            %s = %h\", \"done_counting\", 0);\n            $display(\"            %s = %h\", \"ack\", 0);\n            $display(\"            %s = %h\", \"state\", 0000001000);\n            $display(\"Time %0t: Output %s = %h\", $time, \"shift_ena\", shift_ena);\n            errors++;\n        end\n    end\n\n    // Final reporting\n    final begin\n        $display(\"Simulation finished at %0d ps\", $time);\n        if (errors == 0)\n            $display(\"TEST PASSED\");\n        else\n            $display(\"TEST FAILED with %0d errors\", errors);\n    end\n\nendmodule\n"
    }
}