{
    "code": "module TopModule (\n    input logic clk,       // Clock input, active on rising edge\n    input logic reset,     // Active-high synchronous reset\n    input logic in,        // Single-bit input signal\n    output logic out       // Single-bit output signal\n);\n\n    // State encoding\n    typedef enum logic {\n        B = 1'b0, // Reset state\n        A = 1'b1  // Other state\n    } state_t;\n\n    state_t current_state;\n\n    // State transition and output logic\n    always @(posedge clk) begin\n        if (reset) begin\n            // On reset, go to state B\n            current_state <= B;\n            out <= 1'b1;\n        end else begin\n            case (current_state)\n                B: begin\n                    out <= 1'b1;\n                    if (in == 1'b0)\n                        current_state <= A;\n                    else\n                        current_state <= B;\n                end\n                A: begin\n                    out <= 1'b0;\n                    if (in == 1'b0)\n                        current_state <= B;\n                    else\n                        current_state <= A;\n                end\n            endcase\n        end\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 83,
        "passfail": "R"
    },
    "iterations_used": 1
}