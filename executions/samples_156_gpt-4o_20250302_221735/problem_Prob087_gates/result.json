{
    "code": "module TopModule (\n    input logic a,      // 1-bit input\n    input logic b,      // 1-bit input\n    output logic out_and,   // 1-bit output: Logical AND of a and b\n    output logic out_or,    // 1-bit output: Logical OR of a and b\n    output logic out_xor,   // 1-bit output: Logical XOR of a and b\n    output logic out_nand,  // 1-bit output: Logical NAND of a and b\n    output logic out_nor,   // 1-bit output: Logical NOR of a and b\n    output logic out_xnor,  // 1-bit output: Logical XNOR of a and b\n    output logic out_anotb  // 1-bit output: Logical AND of a and NOT b\n);\n\n    // Combinational logic for each output\n    assign out_and = a & b;\n    assign out_or = a | b;\n    assign out_xor = a ^ b;\n    assign out_nand = ~(a & b);\n    assign out_nor = ~(a | b);\n    assign out_xnor = ~(a ^ b);\n    assign out_anotb = a & ~b;\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "."
    },
    "iterations_used": 1
}