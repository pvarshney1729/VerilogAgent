{
    "code": "module TopModule (\n    input logic clk,             // Clock signal, positive edge-triggered\n    input logic rst_n,           // Active-low asynchronous reset\n    input logic x,               // Control input, 1 bit\n    input logic [2:0] y,         // Current state input, 3 bits, unsigned\n    output logic Y0,             // Output bit, next state y[0] (LSB of next state)\n    output logic z               // Output z, 1 bit\n);\n\n    logic [2:0] next_state;\n\n    always_ff @(posedge clk or negedge rst_n) begin\n        if (!rst_n) begin\n            next_state <= 3'b000; // Reset state\n            Y0 <= 1'b0;\n            z <= 1'b0;\n        end else begin\n            case (y)\n                3'b000: next_state <= (x) ? 3'b001 : 3'b000;\n                3'b001: next_state <= (x) ? 3'b100 : 3'b001;\n                3'b010: next_state <= (x) ? 3'b001 : 3'b010;\n                3'b011: next_state <= (x) ? 3'b010 : 3'b001;\n                3'b100: next_state <= (x) ? 3'b100 : 3'b011;\n                default: next_state <= 3'b000; // Safe default state\n            endcase\n            Y0 <= next_state[0];\n            z <= (y == 3'b011) || (y == 3'b100);\n        end\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 87,
        "passfail": "R"
    },
    "iterations_used": 1
}