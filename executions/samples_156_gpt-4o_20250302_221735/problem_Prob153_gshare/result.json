{
    "code": "module TopModule(\n    input logic clk,               // Clock signal\n    input logic areset,            // Asynchronous active-high reset\n\n    input logic predict_valid,     // Validity flag for prediction\n    input logic [6:0] predict_pc,  // 7-bit program counter for prediction\n    output logic predict_taken,    // Output: Predicted branch direction\n    output logic [6:0] predict_history, // Output: Branch history used for prediction\n\n    input logic train_valid,       // Validity flag for training\n    input logic train_taken,       // Actual branch outcome for training\n    input logic train_mispredicted,// Misprediction indicator\n    input logic [6:0] train_history, // Branch history for training\n    input logic [6:0] train_pc     // 7-bit program counter for training\n);\n\n    logic [6:0] global_branch_history;\n    logic [1:0] PHT [0:127]; // Pattern History Table with 2-bit counters\n\n    // Asynchronous reset\n    always_ff @(posedge clk or posedge areset) begin\n        if (areset) begin\n            global_branch_history <= 7'b0;\n            for (int i = 0; i < 128; i++) begin\n                PHT[i] <= 2'b00;\n            end\n        end else begin\n            if (train_valid) begin\n                logic [6:0] train_index = train_pc ^ train_history;\n                if (train_taken) begin\n                    if (PHT[train_index] < 2'b11) begin\n                        PHT[train_index] <= PHT[train_index] + 1;\n                    end\n                end else begin\n                    if (PHT[train_index] > 2'b00) begin\n                        PHT[train_index] <= PHT[train_index] - 1;\n                    end\n                end\n\n                if (train_mispredicted) begin\n                    global_branch_history <= train_history;\n                end else begin\n                    global_branch_history <= {global_branch_history[5:0], train_taken};\n                end\n            end else if (predict_valid) begin\n                predict_history <= global_branch_history;\n            end\n        end\n    end\n\n    always_comb begin\n        if (predict_valid) begin\n            logic [6:0] predict_index = predict_pc ^ global_branch_history;\n            predict_taken = PHT[predict_index][1];\n        end else begin\n            predict_taken = 1'b0;\n        end\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 610,
        "passfail": "R"
    },
    "iterations_used": 1
}