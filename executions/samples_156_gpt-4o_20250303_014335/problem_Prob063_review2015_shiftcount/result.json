{
    "code": "module TopModule (\n    input logic clk,            // Clock input\n    input logic reset_n,        // Asynchronous active-low reset\n    input logic shift_ena,      // Enable signal for shifting operation\n    input logic count_ena,      // Enable signal for counting operation\n    input logic data,           // Serial data input for the shift register\n    output logic [3:0] q        // 4-bit output representing the current state of the shift register/counter\n);\n\n    always_ff @(posedge clk or negedge reset_n) begin\n        if (!reset_n) begin\n            q <= 4'b0000; // Initialize q to zero on reset\n        end else begin\n            if (shift_ena && !count_ena) begin\n                q <= {q[2:0], data}; // Shift left and input data into q[3]\n            end else if (count_ena && !shift_ena) begin\n                q <= q - 1; // Decrement the value in q\n            end\n            // Undefined behavior if both shift_ena and count_ena are high\n        end\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "."
    },
    "iterations_used": 1
}