{
    "code": "module TopModule (\n    input logic clk,    // Clock signal, positive edge-triggered\n    input logic reset,  // Active-high synchronous reset\n    input logic in,     // Single-bit input\n    output logic out    // Single-bit output\n);\n\n    typedef enum logic {\n        STATE_A = 1'b0,\n        STATE_B = 1'b1\n    } state_t;\n\n    state_t state;  // State register\n\n    always @(posedge clk) begin\n        if (reset) begin\n            state <= STATE_B;  // Initialize state to B on reset\n            out <= 1;\n        end else begin\n            case (state)\n                STATE_B: begin\n                    if (in == 1'b0) begin\n                        state <= STATE_A;\n                        out <= 1'b0;\n                    end else begin\n                        state <= STATE_B;\n                        out <= 1'b1;\n                    end\n                end\n                STATE_A: begin\n                    if (in == 1'b0) begin\n                        state <= STATE_B;\n                        out <= 1'b1;\n                    end else begin\n                        state <= STATE_A;\n                        out <= 1'b0;\n                    end\n                end\n            endcase\n        end\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "."
    },
    "iterations_used": 2
}