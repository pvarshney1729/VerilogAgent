{
    "code": "module TopModule (\n    input logic clk,     // Clock signal, positive edge-triggered\n    input logic reset,   // Active-high synchronous reset\n    input logic j,       // Input signal 'j', 1-bit\n    input logic k,       // Input signal 'k', 1-bit\n    output logic out     // Output signal 'out', 1-bit\n);\n\n    typedef enum logic [0:0] {\n        OFF = 1'b0,\n        ON  = 1'b1\n    } state_t;\n\n    state_t current_state;\n\n    always_ff @(posedge clk) begin\n        if (reset) begin\n            current_state <= OFF;\n            out <= 1'b0;\n        end else begin\n            case (current_state)\n                OFF: begin\n                    if (j) begin\n                        current_state <= ON;\n                        out <= 1'b1;\n                    end\n                end\n                ON: begin\n                    if (k) begin\n                        current_state <= OFF;\n                        out <= 1'b0;\n                    end\n                end\n            endcase\n        end\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "."
    },
    "iterations_used": 1
}