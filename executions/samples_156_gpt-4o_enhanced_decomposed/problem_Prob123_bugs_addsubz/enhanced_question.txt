<ENHANCED_SPEC>
Consider the following adder-subtractor with a zero flag:

  synthesis verilog_input_version verilog_2001
  module TopModule (
      input wire do_sub,                // Control signal: 0 for addition, 1 for subtraction
      input wire [7:0] a,              // 8-bit input operand a
      input wire [7:0] b,              // 8-bit input operand b
      output reg [7:0] out,             // 8-bit output result of addition or subtraction
      output reg result_is_zero         // Flag indicating if the result is zero
  );

      // Combinational logic block for addition and subtraction
      always @(*) begin
          // Default output and zero flag
          out = 8'b0;                     // Initialize output to zero
          result_is_zero = 1'b0;          // Initialize zero flag to false

          // Perform addition or subtraction based on do_sub signal
          case (do_sub)
            1'b0: out = a + b;             // When do_sub is 0, perform addition
            1'b1: out = a - b;             // When do_sub is 1, perform subtraction
          endcase

          // Update zero flag based on the output result
          if (out == 8'b0)                 // Check if output is zero
              result_is_zero = 1'b1;      // Set zero flag to true
      end

  endmodule
</ENHANCED_SPEC>