<ENHANCED_SPEC>
Module Name: TopModule

Interface:
- Input Ports:
  - clk: 1-bit input (clock signal)
  - reset: 1-bit input (active-high synchronous reset)
  - w: 1-bit input (control signal)

- Output Ports:
  - z: 1-bit output (FSM output)

State Machine Description:
The module implements a finite state machine (FSM) with the following states and transitions:

States:
- A (encoded as 3'b000)
- B (encoded as 3'b001)
- C (encoded as 3'b010)
- D (encoded as 3'b011)
- E (encoded as 3'b100)
- F (encoded as 3'b101)

State Transitions:
- From state A:
  - If w = 1, transition to state B.
  - If w = 0, remain in state A.
  
- From state B:
  - If w = 1, transition to state C.
  - If w = 0, transition to state D.
  
- From state C:
  - If w = 1, transition to state E.
  - If w = 0, transition to state D.
  
- From state D:
  - If w = 1, transition to state F.
  - If w = 0, transition to state A.
  
- From state E:
  - If w = 1, remain in state E.
  - If w = 0, transition to state D.
  
- From state F:
  - If w = 1, transition to state C.
  - If w = 0, transition to state D.

Reset Behavior:
- The reset signal is synchronous and active-high. When reset is asserted, the FSM transitions to state A.

Clocking:
- All sequential logic is triggered on the positive edge of the clk signal.

Implementation Guidelines:
- Use separate always blocks for the state transition logic and the state flip-flops.
- The output z should be derived from the current state of the FSM. It can be implemented using either continuous assignment statements or an always block, based on the designer's discretion.
- Ensure that all flip-flops and registers have explicitly defined initial values.
</ENHANCED_SPEC>