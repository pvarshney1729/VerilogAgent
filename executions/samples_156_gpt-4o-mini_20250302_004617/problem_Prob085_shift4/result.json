{
    "code": "module shift_register (\n    input logic clk,\n    input logic areset,\n    input logic load,\n    input logic ena,\n    input logic [3:0] data_in,\n    output logic [3:0] data_out\n);\n\n    logic [3:0] shift_reg;\n\n    always @(*) begin\n        if (areset) begin\n            shift_reg = 4'b0000;\n        end else if (load) begin\n            shift_reg = data_in;\n        end else if (ena) begin\n            shift_reg = {1'b0, shift_reg[3:1]}; // Right shift\n        end\n    end\n\n    assign data_out = shift_reg;\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "m"
    },
    "iterations_used": 3
}