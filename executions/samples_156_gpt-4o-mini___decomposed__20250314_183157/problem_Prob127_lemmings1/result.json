{
    "code": "module TopModule (\n    input logic clk,\n    input logic areset,\n    input logic bump_left,\n    input logic bump_right,\n    output logic walk_left,\n    output logic walk_right\n);\n\n    // State encoding\n    typedef enum logic [1:0] {\n        LEFT = 2'b00,\n        RIGHT = 2'b01\n    } state_t;\n\n    state_t current_state, next_state;\n\n    // State transition\n    always_ff @(posedge clk) begin\n        if (areset) begin\n            current_state <= LEFT;\n        end else begin\n            current_state <= next_state;\n        end\n    end\n\n    // Next state logic\n    always_comb begin\n        case (current_state)\n            LEFT: begin\n                if (bump_right)\n                    next_state = RIGHT;\n                else\n                    next_state = LEFT;\n            end\n            \n            RIGHT: begin\n                if (bump_left)\n                    next_state = LEFT;\n                else\n                    next_state = RIGHT;\n            end\n            \n            default: next_state = LEFT; // default state\n        endcase\n    end\n\n    // Output logic\n    always_comb begin\n        walk_left = (current_state == LEFT);\n        walk_right = (current_state == RIGHT);\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 195,
        "passfail": "R"
    }
}