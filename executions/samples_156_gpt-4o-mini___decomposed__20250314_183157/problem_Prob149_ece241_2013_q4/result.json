{
    "code": "module TopModule (\n    input logic clk,\n    input logic reset,\n    input logic [2:0] s,\n    output logic fr2,\n    output logic fr1,\n    output logic fr0,\n    output logic dfr\n);\n\n    logic [1:0] prev_level;\n\n    always @(posedge clk) begin\n        if (reset) begin\n            fr2 <= 1'b1;\n            fr1 <= 1'b1;\n            fr0 <= 1'b1;\n            dfr <= 1'b1;\n            prev_level <= 2'b00; // Reset to low level state\n        end else begin\n            case(s)\n                3'b111: begin // Above s[2]\n                    fr2 <= 1'b0;\n                    fr1 <= 1'b0;\n                    fr0 <= 1'b0;\n                    dfr <= 1'b0; // No flow\n                    prev_level <= 2'b11; // Update prev level to above s[2]\n                end\n                3'b110: begin // Between s[2] and s[1]\n                    fr2 <= 1'b0;\n                    fr1 <= 1'b0;\n                    fr0 <= 1'b1; // Nominal flow fr0\n                    dfr <= (prev_level == 2'b10) ? 1'b1 : 1'b0; // Increase flow if level went up\n                    prev_level <= 2'b10; // Update prev level\n                end\n                3'b100: begin // Between s[1] and s[0]\n                    fr2 <= 1'b0;\n                    fr1 <= 1'b1; // Nominal flow fr1\n                    fr0 <= 1'b1; // Nominal flow fr0\n                    dfr <= (prev_level == 2'b01) ? 1'b1 : 1'b0; // Increase flow if level went up\n                    prev_level <= 2'b01; // Update prev level\n                end\n                default: begin // Below s[0] (none asserted)\n                    fr2 <= 1'b1; // Maximum flow\n                    fr1 <= 1'b1;\n                    fr0 <= 1'b1;\n                    dfr <= 1'b1; // Open all valves\n                    prev_level <= 2'b00; // Update prev level to below s[0]\n                end\n            endcase\n        end\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 1171,
        "passfail": "R"
    }
}