{
    "code": "module A (\n    input logic x,\n    input logic y,\n    output logic z\n);\n    assign z = (x ^ y) & x;\nendmodule\n\nmodule B (\n    input logic x,\n    input logic y,\n    output logic z\n);\n    always @(*) begin\n        if (x == 0 && y == 0)\n            z = 1;\n        else if (x == 1 && y == 1)\n            z = 1;\n        else\n            z = 0;\n    end\nendmodule\n\nmodule top_level (\n    input logic x,\n    input logic y,\n    output logic z\n);\n    logic a1_out, a2_out, b1_out, b2_out;\n    logic or_out, and_out;\n\n    A u_A1 (\n        .x(x),\n        .y(y),\n        .z(a1_out)\n    );\n\n    B u_B1 (\n        .x(x),\n        .y(y),\n        .z(b1_out)\n    );\n\n    A u_A2 (\n        .x(x),\n        .y(y),\n        .z(a2_out)\n    );\n\n    B u_B2 (\n        .x(x),\n        .y(y),\n        .z(b2_out)\n    );\n\n    assign or_out = a1_out | b1_out;\n    assign and_out = a2_out & b2_out;\n    assign z = or_out ^ and_out;\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "m"
    }
}