{
    "code": "module TopModule (\n    input logic clk,\n    input logic reset,\n    input logic data,\n    output logic start_shifting\n);\n    typedef enum logic [2:0] {\n        IDLE   = 3'b000,\n        S1     = 3'b001,\n        S2     = 3'b010,\n        S3     = 3'b011,\n        FOUND  = 3'b100\n    } state_t;\n\n    state_t current_state, next_state;\n\n    always_ff @(posedge clk) begin\n        if (reset) begin\n            current_state <= IDLE;\n            start_shifting <= 0;\n        end else begin\n            current_state <= next_state;\n        end\n    end\n\n    always_comb begin\n        case (current_state)\n            IDLE:   next_state = (data) ? S1 : IDLE;\n            S1:     next_state = (data) ? S2 : IDLE;\n            S2:     next_state = (data) ? IDLE : S3;\n            S3:     next_state = (data) ? FOUND : IDLE;\n            FOUND:  next_state = FOUND;\n            default: next_state = IDLE;\n        endcase\n    end\n\n    always_ff @(posedge clk) begin\n        if (reset) begin\n            start_shifting <= 0;\n        end else if (current_state == FOUND) begin\n            start_shifting <= 1;\n        end\n    end\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "e"
    }
}