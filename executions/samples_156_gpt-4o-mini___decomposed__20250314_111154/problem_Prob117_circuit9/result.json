{
    "code": "module TopModule (\n    input logic clk,\n    input logic a,\n    output logic [2:0] q\n);\n\n    typedef enum logic [2:0] {\n        STATE_0 = 3'b000,\n        STATE_1 = 3'b001,\n        STATE_4 = 3'b100,\n        STATE_5 = 3'b101,\n        STATE_6 = 3'b110\n    } state_t;\n\n    state_t current_state, next_state;\n\n    always @(posedge clk) begin\n        current_state <= next_state;\n    end\n\n    always @(*) begin\n        case (current_state)\n            STATE_0: next_state = (a) ? STATE_1 : STATE_0;\n            STATE_1: next_state = (a) ? STATE_4 : STATE_0;\n            STATE_4: next_state = (a) ? STATE_4 : STATE_5;\n            STATE_5: next_state = (a) ? STATE_6 : STATE_0;\n            STATE_6: next_state = (a) ? STATE_0 : STATE_6;\n            default: next_state = STATE_0;\n        endcase\n    end\n\n    assign q = current_state;\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "e"
    }
}