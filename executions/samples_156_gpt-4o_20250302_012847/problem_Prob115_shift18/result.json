{
    "code": "```verilog\nmodule TopModule(\n    input logic clk,\n    input logic load,\n    input logic ena,\n    input logic [1:0] amount,\n    input logic [63:0] data,\n    output logic [63:0] q\n);\n\n    always_ff @(posedge clk) begin\n        if (load) begin\n            q <= data;\n        end else if (ena) begin\n            case (amount)\n                2'b00: q <= {q[62:0], 1'b0}; // Shift left by 1\n                2'b01: q <= {q[55:0], 8'b0}; // Shift left by 8\n                2'b10: q <= {q[63], q[63:1]}; // Arithmetic shift right by 1\n                2'b11: q <= {{8{q[63]}}, q[63:8]}; // Arithmetic shift right by 8\n                default: q <= q; // No operation for undefined amount\n            endcase\n        end\n    end\n\n    initial begin\n        q = 64'b0;\n    end\n\nendmodule\n```",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "S"
    },
    "iterations_used": 1
}