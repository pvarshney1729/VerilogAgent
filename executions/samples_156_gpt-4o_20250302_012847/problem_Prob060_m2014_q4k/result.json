{
    "code": "```verilog\nmodule TopModule (\n    input logic clk,           // Clock signal, active on the rising edge\n    input logic resetn,        // Active-low synchronous reset\n    input logic data_in,       // 1-bit input data to be shifted into the register\n    output logic data_out      // 1-bit output of the shift register\n);\n\n    logic [3:0] shift_reg;     // 4-bit shift register\n\n    always_ff @(posedge clk) begin\n        if (!resetn) begin\n            shift_reg <= 4'b0000; // Clear shift register on reset\n        end else begin\n            shift_reg <= {shift_reg[2:0], data_in}; // Shift left\n        end\n    end\n\n    assign data_out = shift_reg[3]; // Output the MSB\n\nendmodule\n```",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "S"
    },
    "iterations_used": 1
}