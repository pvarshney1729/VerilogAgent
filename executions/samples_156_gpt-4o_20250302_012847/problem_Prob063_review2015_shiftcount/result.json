{
    "code": "module counter_module (\n    input logic clk,\n    input logic reset,\n    input logic shift_ena,\n    input logic count_ena,\n    output logic [3:0] counter\n);\n\n    // Initialize counter to zero\n    initial begin\n        counter = 4'b0000;\n    end\n\n    always_ff @(posedge clk) begin\n        if (reset) begin\n            counter <= 4'b0000;\n        end else begin\n            if (count_ena) begin\n                if (counter == 4'b0000) begin\n                    counter <= 4'b1111; // Wrap-around behavior\n                end else begin\n                    counter <= counter - 1;\n                end\n            end\n            if (shift_ena) begin\n                counter <= {counter[2:0], counter[3]}; // Shift left with wrap-around\n            end\n        end\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "m"
    },
    "iterations_used": 3
}