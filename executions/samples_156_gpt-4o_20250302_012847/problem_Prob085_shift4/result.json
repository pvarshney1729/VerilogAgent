{
    "code": "```verilog\nmodule shift_register (\n    input logic clk,\n    input logic areset,  // Asynchronous reset\n    input logic ena,\n    input logic load,\n    input logic [3:0] data,\n    output logic [3:0] q\n);\n\n    always_ff @(posedge clk) begin\n        if (areset) begin\n            q <= 4'b0000;  // Initialize all flip-flops to zero\n        end else if (load) begin\n            q <= data;  // Load data when load is high\n        end else if (ena) begin\n            q <= {1'b0, q[3:1]};  // Right shift operation\n        end\n    end\n\nendmodule\n```",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "S"
    },
    "iterations_used": 3
}