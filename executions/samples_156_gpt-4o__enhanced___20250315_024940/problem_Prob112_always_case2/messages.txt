[
    {
        "role": "system",
        "content": "You are a Verilog RTL designer that only writes code using correct Verilog syntax."
    },
    {
        "role": "user",
        "content": "<Question>\nI would like you to implement a module named TopModule with the following\ninterface. All input and output ports are one bit unless otherwise\nspecified.\n\n - input  in  (4 bits)\n - output pos (2 bits)\n\nThe module should implement a priority encoder. A priority encoder is a\ncombinational circuit that, when given an input bit vector, outputs the\nposition of the first 1 bit in the vector. For example, a 8-bit priority\nencoder given the input 8'b10010000 would output 3'd4, because bit[4] is\nfirst bit that is high. Build a 4-bit priority encoder. For this problem,\nif none of the input bits are high (i.e., input is zero), output zero.\nNote that a 4-bit number has 16 possible combinations.\n</Question>\n\n\n\nThe following plan/guidelines might be useful for generating the correct Verilog code:\n<Guidelines>\n- Ensure synchronous reset is implemented as specified.\n- Initialize all flip-flops to zero in simulation.\n- Adhere strictly to the provided interface and signal names.\n- Generate results in the specified cycle timing.\n- Infer logic correctly, especially when using Karnaugh maps.\n- Handle bitwise operations and signal broadcasting correctly.\n</Guidelines>\n\nHere are some additional rules and coding conventions.\n<Coding Conventions>\n - Declare all ports and signals as logic; do not to use wire or reg.\n - For combinational logic with an always block do not explicitly specify\n   the sensitivity list; instead use always @(*).\n - All sized numeric constants must have a size greater than zero\n   (e.g, 0'b0 is not a valid expression).\n - An always block must read at least one signal otherwise it will never\n   be executed; use an assign statement instead of an always block in\n   situations where there is no need to read any signals.\n - if the module uses a synchronous reset signal, this means the reset\n   signal is sampled with respect to the clock. When implementing a\n   synchronous reset signal, do not include posedge reset in the\n   sensitivity list of any sequential always block.\n</Coding Conventions>\n\n<REASONING>\nYour reasoning behind your implementation here. Think step by step.\n</REASONING>\n\n<CODE>\nIMPORTANT: Enclose your code with [BEGIN] and [DONE].\n</CODE>\n"
    },
    {
        "role": "assistant",
        "content": "Here is the enhanced specification which might be useful:\n                    Module Name: TopModule\n\nPort Interface:\n- Input Ports:\n  - in: bit[3:0] (4 bits, unsigned) \n    - Description: A 4-bit input vector where bit[0] is the least significant bit (LSB) and bit[3] is the most significant bit (MSB).\n  \n- Output Ports:\n  - pos: bit[1:0] (2 bits, unsigned)\n    - Description: A 2-bit output representing the position of the highest priority (first) '1' bit in the input vector. The output is defined such that pos = 2'b00 if no input bits are high.\n\nFunctional Description:\n- The module implements a 4-bit priority encoder, which is a combinational logic circuit. The output pos indicates the index of the first '1' bit present in the input vector 'in'.\n- If there are no '1' bits in the input vector (i.e., in == 4'b0000), the output pos shall be 2'b00.\n  \nBehavioral Definitions:\n- The outputs are determined based on the following conditions:\n  - If in[0] == 1, pos = 2'b00\n  - If in[1] == 1, pos = 2'b01\n  - If in[2] == 1, pos = 2'b10\n  - If in[3] == 1, pos = 2'b11\n  - If in == 4'b0000, pos = 2'b00\n\nEdge Cases:\n- The output pos must be 2'b00 when in is 4'b0000.\n- For any valid input combination of the 4-bit 'in', the output pos must reflect the position of the first '1' bit, with priority given to the MSB.\n\nImplementation Constraints:\n- Ensure there are no race conditions in the logic determining the output pos.\n- Since this is a combinational circuit, there are no clock cycles or sequential elements involved. \n\nReset Conditions:\n- There are no reset conditions as this is purely a combinational circuit.\n\nSignal Dependencies:\n- The output pos is directly dependent on the values of the input bits in 'in'. The evaluation of outputs must be performed in a manner that guarantees correct priorities based on the input conditions stated.\n                    "
    }
]