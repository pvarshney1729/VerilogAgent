{
    "code": "module A (\n    input logic x,\n    input logic y,\n    output logic z\n);\n    assign z = (x ^ y) & x;\nendmodule\n\nmodule B (\n    input logic x,\n    input logic y,\n    output logic z\n);\n    always @(*) begin\n        if (x == 0 && y == 0) begin\n            z = 1;\n        end else if (x == 1 && y == 0) begin\n            z = 0;\n        end else if (x == 0 && y == 1) begin\n            z = 0;\n        end else if (x == 1 && y == 1) begin\n            z = 1;\n        end\n    end\nendmodule\n\nmodule TopModule (\n    input logic x,\n    input logic y,\n    output logic z\n);\n    logic z_a1, z_b1, z_a2, z_b2;\n    logic or_out, and_out;\n\n    A a1 (\n        .x(x),\n        .y(y),\n        .z(z_a1)\n    );\n\n    B b1 (\n        .x(x),\n        .y(y),\n        .z(z_b1)\n    );\n\n    A a2 (\n        .x(x),\n        .y(y),\n        .z(z_a2)\n    );\n\n    B b2 (\n        .x(x),\n        .y(y),\n        .z(z_b2)\n    );\n\n    assign or_out = z_a1 | z_b1;\n    assign and_out = z_a2 & z_b2;\n\n    assign z = or_out ^ and_out;\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "."
    }
}