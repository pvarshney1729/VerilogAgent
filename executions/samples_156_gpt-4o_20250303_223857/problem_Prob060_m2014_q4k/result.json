{
    "code": "module TopModule (\n    input  logic clk,        // Clock signal, active on the positive edge\n    input  logic resetn,     // Active-low synchronous reset\n    input  logic in,         // Serial input to the shift register\n    output logic out         // Serial output from the shift register\n);\n\n    // Internal 4-bit shift register\n    logic [3:0] shift_reg;\n\n    // Sequential logic for shift register operation\n    always_ff @(posedge clk) begin\n        if (!resetn) begin\n            shift_reg <= 4'b0000; // Reset shift register to 0\n        end else begin\n            shift_reg <= {shift_reg[2:0], in}; // Shift left and input new bit\n        end\n    end\n\n    // Assign the MSB of the shift register to the output\n    assign out = shift_reg[3];\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "."
    }
}