{
    "code": "module TopModule (\n    input  logic clk,\n    input  logic areset,\n    input  logic x,\n    output logic z\n);\n\n    typedef enum logic [1:0] {\n        IDLE = 2'b00,\n        INVERT = 2'b01,\n        PASSTHROUGH = 2'b10\n    } state_t;\n\n    state_t current_state, next_state;\n\n    always_ff @(posedge clk or posedge areset) begin\n        if (areset) begin\n            current_state <= IDLE;\n            z <= 1'b0;\n        end else begin\n            current_state <= next_state;\n            case (current_state)\n                IDLE: z <= 1'b0;\n                INVERT: z <= ~x;\n                PASSTHROUGH: z <= x;\n                default: z <= 1'b0;\n            endcase\n        end\n    end\n\n    always_comb begin\n        case (current_state)\n            IDLE: begin\n                if (x == 1'b1)\n                    next_state = INVERT;\n                else\n                    next_state = IDLE;\n            end\n            INVERT: begin\n                if (x == 1'b0)\n                    next_state = PASSTHROUGH;\n                else\n                    next_state = INVERT;\n            end\n            PASSTHROUGH: begin\n                next_state = PASSTHROUGH;\n            end\n            default: next_state = IDLE;\n        endcase\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 371,
        "passfail": "R"
    }
}