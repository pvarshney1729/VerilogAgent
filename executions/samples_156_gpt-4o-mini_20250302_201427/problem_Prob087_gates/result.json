{
    "code": "module TopModule (\n    input  logic a,        // Input: 1-bit, unsigned\n    input  logic b,        // Input: 1-bit, unsigned\n    output logic out_and,  // Output: 1-bit, result of logical AND between a and b\n    output logic out_or,   // Output: 1-bit, result of logical OR between a and b\n    output logic out_xor,  // Output: 1-bit, result of logical XOR between a and b\n    output logic out_nand, // Output: 1-bit, result of logical NAND between a and b\n    output logic out_nor,  // Output: 1-bit, result of logical NOR between a and b\n    output logic out_xnor, // Output: 1-bit, result of logical XNOR between a and b\n    output logic out_anotb // Output: 1-bit, result of 'a and (not b)'\n);\n\nassign out_and  = a & b;            // Logical AND operation\nassign out_or   = a | b;            // Logical OR operation\nassign out_xor  = a ^ b;            // Logical XOR operation\nassign out_nand = ~(a & b);         // Logical NAND operation\nassign out_nor  = ~(a | b);         // Logical NOR operation\nassign out_xnor = ~(a ^ b);         // Logical XNOR operation\nassign out_anotb = a & ~b;          // Logical 'a and (not b)' operation\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "."
    },
    "iterations_used": 2
}