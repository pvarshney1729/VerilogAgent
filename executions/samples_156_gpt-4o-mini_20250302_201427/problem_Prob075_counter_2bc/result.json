{
    "code": "module TopModule (\n    input logic clk,               // Clock signal\n    input logic areset,            // Asynchronous reset, active high\n    input logic train_valid,       // Training validity signal\n    input logic train_taken,       // Taken signal\n    output logic [1:0] state       // 2-bit unsigned counter output\n);\n\n    always @(posedge clk or posedge areset) begin\n        if (areset) begin\n            state <= 2'b01;         // Asynchronous reset to weakly not-taken state\n        end else if (train_valid) begin\n            if (train_taken) begin\n                if (state < 2'b11) begin\n                    state <= state + 1; // Increment state\n                end\n            end else begin\n                if (state > 2'b00) begin\n                    state <= state - 1; // Decrement state\n                end\n            end\n        end\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "."
    },
    "iterations_used": 1
}