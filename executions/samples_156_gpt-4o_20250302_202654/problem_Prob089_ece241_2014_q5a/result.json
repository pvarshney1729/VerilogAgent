{
    "code": "module TopModule (\n    input logic clk,\n    input logic areset,\n    input logic x,\n    output logic z\n);\n\n    typedef enum logic [1:0] {\n        STATE_0 = 2'b00,\n        STATE_1 = 2'b01\n    } state_t;\n\n    state_t current_state, next_state;\n    logic carry;\n\n    always_ff @(posedge clk or posedge areset) begin\n        if (areset) begin\n            current_state <= STATE_0;\n            z <= 1'b0;\n            carry <= 1'b0;\n        end else begin\n            current_state <= next_state;\n            if (current_state == STATE_1) begin\n                z <= ~x ^ carry;\n                carry <= carry | x;\n            end\n        end\n    end\n\n    always_comb begin\n        case (current_state)\n            STATE_0: begin\n                next_state = STATE_1;\n            end\n            STATE_1: begin\n                next_state = STATE_1;\n            end\n            default: begin\n                next_state = STATE_0;\n            end\n        endcase\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 381,
        "passfail": "R"
    },
    "iterations_used": 1
}