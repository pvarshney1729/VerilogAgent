{
    "code": "module TopModule (\n    input logic clk,\n    input logic areset,\n    input logic in,\n    output logic out\n);\n\n    typedef enum logic {A, B} state_t;\n    state_t current_state, next_state;\n\n    // State transition logic\n    always @(*) begin\n        case (current_state)\n            A: begin\n                if (in == 1'b0)\n                    next_state = B;\n                else\n                    next_state = A;\n            end\n            B: begin\n                if (in == 1'b0)\n                    next_state = A;\n                else\n                    next_state = B;\n            end\n            default: next_state = B; // Default to state B\n        endcase\n    end\n\n    // State register with synchronous reset\n    always @(posedge clk) begin\n        if (areset) \n            current_state <= B; // Asynchronous reset to state B\n        else \n            current_state <= next_state;\n    end\n\n    // Output logic (Moore machine output)\n    assign out = (current_state == B) ? 1'b1 : 1'b0;\n\nendmodule",
    "test_results": {
        "num_mismatch": 58,
        "passfail": "R"
    }
}