{
    "code": "module TopModule (\n    input logic clk,       // Clock input\n    input logic reset,     // Active-high synchronous reset\n    input logic in,        // Input signal for state transitions\n    output logic out       // Output signal representing the state output\n);\n\n    // State encoding\n    typedef enum logic {\n        STATE_A = 1'b0,\n        STATE_B = 1'b1\n    } state_t;\n\n    state_t state;\n\n    always_ff @(posedge clk) begin\n        if (reset) begin\n            // Synchronous reset behavior\n            state <= STATE_B;\n            out <= 1'b1;\n        end else begin\n            case (state)\n                STATE_B: begin\n                    out <= 1'b1;\n                    if (in == 1'b0)\n                        state <= STATE_A; // Transition to State A\n                    else\n                        state <= STATE_B; // Remain in State B\n                end\n                STATE_A: begin\n                    out <= 1'b0;\n                    if (in == 1'b0)\n                        state <= STATE_B; // Transition to State B\n                    else\n                        state <= STATE_A; // Remain in State A\n                end\n            endcase\n        end\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 83,
        "passfail": "R"
    }
}