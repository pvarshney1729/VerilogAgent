{
    "code": "module TopModule (\n    input logic clk,         // Positive edge-triggered clock signal\n    input logic reset,       // Synchronous active-high reset signal\n    input logic x,           // Input signal\n    output logic z           // Output signal\n);\n    logic [2:0] y;          // 3-bit state register\n\n    // Synchronous reset and state transition\n    always_ff @(posedge clk) begin\n        if (reset) begin\n            y <= 3'b000;     // Reset state\n            z <= 1'b0;       // Reset output\n        end else begin\n            case (y)\n                3'b000: begin\n                    if (x) begin\n                        y <= 3'b001;\n                    end else begin\n                        y <= 3'b000;\n                    end\n                    z <= 1'b0;\n                end\n                3'b001: begin\n                    if (x) begin\n                        y <= 3'b100;\n                    end else begin\n                        y <= 3'b001;\n                    end\n                    z <= 1'b0;\n                end\n                3'b010: begin\n                    if (x) begin\n                        y <= 3'b001;\n                    end else begin\n                        y <= 3'b010;\n                    end\n                    z <= 1'b0;\n                end\n                3'b011: begin\n                    if (x) begin\n                        y <= 3'b010;\n                        z <= 1'b1;\n                    end else begin\n                        y <= 3'b001;\n                        z <= 1'b1;\n                    end\n                end\n                3'b100: begin\n                    if (x) begin\n                        y <= 3'b100;\n                    end else begin\n                        y <= 3'b011;\n                    end\n                    z <= 1'b1;\n                end\n                default: begin\n                    y <= 3'b000; // Default to state 000 on invalid state\n                    z <= 1'b0;\n                end\n            endcase\n        end\n    end\nendmodule",
    "test_results": {
        "num_mismatch": 312,
        "passfail": "R"
    },
    "iterations_used": 1
}