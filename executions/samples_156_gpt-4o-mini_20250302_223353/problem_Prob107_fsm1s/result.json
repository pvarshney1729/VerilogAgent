{
    "code": "module TopModule(\n    input logic clk,       // Clock signal\n    input logic reset,     // Active-high synchronous reset\n    input logic in,        // State machine input\n    output logic out       // State machine output\n);\n\n    typedef enum logic {A, B} state_t;\n    state_t current_state, next_state;\n\n    // State transition logic\n    always @(*) begin\n        case (current_state)\n            B: begin\n                if (in == 1'b0) begin\n                    next_state = A;\n                end else begin\n                    next_state = B;\n                end\n            end\n            A: begin\n                if (in == 1'b0) begin\n                    next_state = B;\n                end else begin\n                    next_state = A;\n                end\n            end\n        endcase\n    end\n\n    // State update and output logic\n    always @(posedge clk) begin\n        if (reset) begin\n            current_state <= B;\n            out <= 1'b1;\n        end else begin\n            current_state <= next_state;\n            out <= (current_state == B) ? 1'b1 : 1'b0;\n        end\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 83,
        "passfail": "R"
    },
    "iterations_used": 1
}