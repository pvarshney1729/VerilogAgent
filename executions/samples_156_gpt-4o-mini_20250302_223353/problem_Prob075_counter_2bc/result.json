{
    "code": "module TopModule (\n    input logic clk,\n    input logic areset,\n    input logic train_valid,\n    input logic train_taken,\n    output logic [1:0] state\n);\n\n    always @(posedge areset or posedge clk) begin\n        if (areset) begin\n            state <= 2'b01; // Reset to weakly not-taken\n        end else begin\n            if (train_valid) begin\n                if (train_taken) begin\n                    state <= (state < 2'b11) ? (state + 1'b1) : state; // Increment, saturate at 2'b11\n                end else begin\n                    state <= (state > 2'b00) ? (state - 1'b1) : state; // Decrement, saturate at 2'b00\n                end\n            end\n        end\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "."
    },
    "iterations_used": 1
}