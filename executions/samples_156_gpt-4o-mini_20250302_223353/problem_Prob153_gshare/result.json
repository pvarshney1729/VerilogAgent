{
    "code": "module gshare_predictor (\n    input logic clk,\n    input logic areset,\n    input logic predict_valid,\n    input logic [6:0] predict_pc,\n    input logic train_valid,\n    input logic train_taken,\n    input logic train_mispredicted,\n    input logic [6:0] train_history,\n    input logic [6:0] train_pc,\n    output logic predict_taken,\n    output logic [6:0] predict_history\n);\n\n    logic [6:0] global_history;\n    logic [1:0] PHT [127:0]; // 128 entries of 2-bit saturating counters\n    logic [6:0] index;\n    logic [1:0] counter_value;\n\n    // Initialize PHT and global history on reset\n    always_ff @(posedge clk) begin\n        if (areset) begin\n            global_history <= 7'b0;\n            for (int i = 0; i < 128; i++) begin\n                PHT[i] <= 2'b01; // Initialize to weakly taken\n            end\n        end else begin\n            if (train_valid) begin\n                // Training operation\n                index <= (train_pc ^ global_history) [6:0];\n                counter_value <= PHT[index];\n                if (train_taken) begin\n                    if (counter_value != 2'b11) begin\n                        PHT[index] <= counter_value + 1;\n                    end\n                end else begin\n                    if (counter_value != 2'b00) begin\n                        PHT[index] <= counter_value - 1;\n                    end\n                end\n                if (train_mispredicted) begin\n                    global_history <= train_history; // Restore history on misprediction\n                end else begin\n                    global_history <= {global_history[5:0], train_taken}; // Update history\n                end\n            end\n            if (predict_valid) begin\n                // Prediction operation\n                index <= (predict_pc ^ global_history) [6:0];\n                counter_value <= PHT[index];\n                predict_taken <= counter_value[1]; // MSB indicates taken\n                predict_history <= global_history; // Output current history\n            end\n        end\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "S"
    },
    "iterations_used": 3
}