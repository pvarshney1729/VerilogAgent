{
    "code": "module TopModule (\n    input logic clk,        // Clock signal, 1 bit, positive edge triggered\n    input logic load,       // Load signal, 1 bit, active high\n    input logic reset,      // Synchronous reset signal\n    input logic [9:0] data, // 10-bit unsigned data input for loading the counter\n    output logic tc         // Terminal count output, 1 bit, active high\n);\n\n    logic [9:0] counter; // 10-bit counter\n\n    always @(posedge clk) begin\n        if (reset) begin\n            counter <= 10'b0; // Reset counter to zero\n            tc <= 1'b0; // Deassert tc on reset\n        end else if (load) begin\n            counter <= data; // Load data into counter\n            tc <= (data == 10'b0) ? 1'b1 : 1'b0; // Assert tc if data is zero\n        end else begin\n            if (counter > 10'b0) begin\n                counter <= counter - 1'b1; // Decrement counter\n                tc <= 1'b0; // Deassert tc while counting down\n            end else begin\n                tc <= 1'b1; // Assert tc when counter reaches zero\n            end\n        end\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 118,
        "passfail": "R"
    },
    "iterations_used": 2
}