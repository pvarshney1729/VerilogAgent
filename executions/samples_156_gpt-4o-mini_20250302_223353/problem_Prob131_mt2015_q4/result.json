{
    "code": "module ModuleA (\n    input logic x,\n    input logic y,\n    output logic z\n);\n    assign z = (x ^ y) & x;\nendmodule\n\nmodule ModuleB (\n    input logic x,\n    input logic y,\n    output logic z\n);\n    assign z = (x == 1'b0 && y == 1'b0) ? 1'b1 :\n                (x == 1'b1 && y == 1'b0) ? 1'b0 :\n                (x == 1'b0 && y == 1'b1) ? 1'b0 :\n                (x == 1'b1 && y == 1'b1) ? 1'b1 : 1'b0;\nendmodule\n\nmodule TopLevel (\n    input logic x,\n    input logic y,\n    output logic z\n);\n    logic z_A1, z_A2, z_B1, z_B2;\n    logic or_output, and_output;\n\n    ModuleA instA1 (.x(x), .y(y), .z(z_A1));\n    ModuleB instB1 (.x(x), .y(y), .z(z_B1));\n    ModuleA instA2 (.x(x), .y(y), .z(z_A2));\n    ModuleB instB2 (.x(x), .y(y), .z(z_B2));\n\n    assign or_output = z_A1 | z_B1;\n    assign and_output = z_A2 & z_B2;\n    assign z = or_output ^ and_output;\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "m"
    },
    "iterations_used": 1
}