{
    "code": "module TopModule (\n    input logic clk,             // Clock input\n    input logic reset,           // Active-high synchronous reset\n    input logic [2:0] s,         // Water level sensors (3 bits)\n    output logic fr2,            // Flow rate control output\n    output logic fr1,            // Flow rate control output\n    output logic fr0,            // Flow rate control output\n    output logic dfr             // Supplemental flow valve control\n);\n\n    // State to track previous sensor state\n    logic [2:0] prev_s;\n\n    always_ff @(posedge clk) begin\n        if (reset) begin\n            // On reset, assert all outputs\n            fr2 <= 1'b1;\n            fr1 <= 1'b1;\n            fr0 <= 1'b1;\n            dfr <= 1'b1;\n            prev_s <= 3'b000;\n        end else begin\n            // Default de-assert all outputs\n            fr2 <= 1'b0;\n            fr1 <= 1'b0;\n            fr0 <= 1'b0;\n            dfr <= 1'b0;\n\n            // Determine flow rate based on sensor input\n            case (s)\n                3'b111: begin\n                    // Above s[2], no flow\n                    fr2 <= 1'b0;\n                    fr1 <= 1'b0;\n                    fr0 <= 1'b0;\n                end\n                3'b011: begin\n                    // Between s[2] and s[1], nominal flow fr0\n                    fr0 <= 1'b1;\n                end\n                3'b001: begin\n                    // Between s[1] and s[0], nominal flow fr0, fr1\n                    fr0 <= 1'b1;\n                    fr1 <= 1'b1;\n                end\n                3'b000: begin\n                    // Below s[0], maximum flow fr0, fr1, fr2\n                    fr0 <= 1'b1;\n                    fr1 <= 1'b1;\n                    fr2 <= 1'b1;\n                end\n            endcase\n\n            // Determine if supplemental flow valve should be opened\n            if (s > prev_s) begin\n                dfr <= 1'b1;\n            end\n\n            // Update previous sensor state\n            prev_s <= s;\n        end\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 1658,
        "passfail": "R"
    }
}