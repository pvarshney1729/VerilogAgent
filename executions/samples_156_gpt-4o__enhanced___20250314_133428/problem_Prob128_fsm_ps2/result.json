{
    "code": "```verilog\nmodule TopModule (\n    input logic clk,            // Clock signal, positive edge triggered\n    input logic reset,          // Active high synchronous reset\n    input logic [7:0] in,       // 8-bit input data stream\n    output logic done           // Done signal, indicates message completion\n);\n\n    typedef enum logic [1:0] {\n        IDLE  = 2'b00,\n        BYTE1 = 2'b01,\n        BYTE2 = 2'b10,\n        BYTE3 = 2'b11\n    } state_t;\n\n    state_t state;   // State register\n\n    // Sequential logic for FSM transitions\n    always_ff @(posedge clk) begin\n        if (reset) begin\n            state <= IDLE;\n            done <= 1'b0;\n        end else begin\n            case (state)\n                IDLE: begin\n                    done <= 1'b0;\n                    if (in[3]) state <= BYTE1;\n                end\n                BYTE1: state <= BYTE2;\n                BYTE2: state <= BYTE3;\n                BYTE3: begin\n                    done <= 1'b1;\n                    state <= IDLE;\n                end\n                default: state <= IDLE;\n            endcase\n        end\n    end\n\nendmodule\n```",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "S"
    }
}