{
    "code": "module TopModule (\n    input logic clk,\n    input logic resetn,\n    input logic x,\n    input logic y,\n    output logic f,\n    output logic g\n);\n\n    typedef enum logic [2:0] {\n        STATE_A = 3'b000,\n        STATE_F = 3'b001,\n        STATE_X1 = 3'b010,\n        STATE_X0 = 3'b011,\n        STATE_X1_AGAIN = 3'b100,\n        STATE_B = 3'b101,\n        STATE_Y1 = 3'b110,\n        STATE_Y2 = 3'b111\n    } state_t;\n\n    state_t current_state, next_state;\n    logic [1:0] y_counter;\n\n    always_ff @(posedge clk) begin\n        if (!resetn) begin\n            current_state <= STATE_A;\n            y_counter <= 2'b00;\n        end else begin\n            current_state <= next_state;\n            if (current_state == STATE_B) begin\n                y_counter <= y_counter + 1;\n            end else begin\n                y_counter <= 2'b00;\n            end\n        end\n    end\n\n    always_comb begin\n        next_state = current_state;\n        f = 1'b0;\n        g = 1'b0;\n\n        case (current_state)\n            STATE_A: begin\n                if (resetn) next_state = STATE_F;\n            end\n            STATE_F: begin\n                f = 1'b1;\n                next_state = STATE_X1;\n            end\n            STATE_X1: begin\n                if (x) next_state = STATE_X0;\n            end\n            STATE_X0: begin\n                if (!x) next_state = STATE_X1_AGAIN;\n            end\n            STATE_X1_AGAIN: begin\n                if (x) next_state = STATE_B;\n            end\n            STATE_B: begin\n                g = 1'b1;\n                if (y) next_state = STATE_Y1;\n                else if (y_counter == 2'b01) next_state = STATE_Y2;\n            end\n            STATE_Y1: begin\n                g = 1'b1;\n            end\n            STATE_Y2: begin\n                g = 1'b0;\n            end\n            default: begin\n                next_state = STATE_A;\n            end\n        endcase\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 144,
        "passfail": "R"
    }
}