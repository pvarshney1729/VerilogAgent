{
    "code": "module TopModule (\n    input logic clk,        // Clock signal, positive edge-triggered\n    input logic reset,      // Active-high synchronous reset\n    input logic j,          // Input signal j\n    input logic k,          // Input signal k\n    output logic out        // Output signal out\n);\n\n    typedef enum logic [0:0] {\n        OFF = 1'b0,\n        ON  = 1'b1\n    } state_t;\n\n    state_t current_state, next_state;\n\n    // State transition logic\n    always @(*) begin\n        case (current_state)\n            OFF: begin\n                if (j == 1'b1)\n                    next_state = ON;\n                else\n                    next_state = OFF;\n            end\n            ON: begin\n                if (k == 1'b1)\n                    next_state = OFF;\n                else\n                    next_state = ON;\n            end\n            default: next_state = OFF;\n        endcase\n    end\n\n    // State register with synchronous reset\n    always_ff @(posedge clk) begin\n        if (reset)\n            current_state <= OFF;\n        else\n            current_state <= next_state;\n    end\n\n    // Output logic\n    always_ff @(posedge clk) begin\n        out <= (current_state == ON) ? 1'b1 : 1'b0;\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 120,
        "passfail": "R"
    }
}