{
    "code": "```verilog\nmodule gshare_predictor (\n    input logic clk,\n    input logic areset,\n    input logic predict_valid,\n    input logic [6:0] predict_pc,\n    input logic train_valid,\n    input logic train_taken,\n    input logic train_mispredicted,\n    input logic [6:0] train_history,\n    input logic [6:0] train_pc,\n    output logic predict_taken,\n    output logic [6:0] predict_history\n);\n\n    // Define the PHT as a 128-entry array of 2-bit saturating counters\n    logic [1:0] PHT [0:127];\n    logic [6:0] global_history;\n\n    // Initialize the PHT and global history on reset\n    always_ff @(posedge clk) begin\n        if (areset) begin\n            global_history <= 7'b0;\n            for (int i = 0; i < 128; i++) begin\n                PHT[i] <= 2'b01; // Weakly not taken\n            end\n        end else begin\n            if (train_valid) begin\n                // Calculate the index for training\n                logic [6:0] train_index = train_pc ^ train_history;\n                // Update the PHT based on train_taken\n                if (train_taken) begin\n                    if (PHT[train_index] < 2'b11) begin\n                        PHT[train_index] <= PHT[train_index] + 1;\n                    end\n                end else begin\n                    if (PHT[train_index] > 2'b00) begin\n                        PHT[train_index] <= PHT[train_index] - 1;\n                    end\n                end\n                // Update global history if not mispredicted\n                if (!train_mispredicted) begin\n                    global_history <= {global_history[5:0], train_taken};\n                end\n            end else if (predict_valid) begin\n                // Update global history on prediction\n                global_history <= {global_history[5:0], predict_taken};\n            end\n        end\n    end\n\n    // Combinational logic for prediction\n    always_comb begin\n        if (predict_valid) begin\n            // Calculate the index for prediction\n            logic [6:0] predict_index = predict_pc ^ global_history;\n            // Determine predict_taken based on the PHT entry\n            predict_taken = (PHT[predict_index] >= 2'b10);\n            // Output the current global history\n            predict_history = global_history;\n        end else begin\n            predict_taken = 1'b0;\n            predict_history = 7'b0;\n        end\n    end\n\nendmodule\n```",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "S"
    }
}