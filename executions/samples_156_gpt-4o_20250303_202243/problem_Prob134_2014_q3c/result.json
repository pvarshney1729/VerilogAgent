{
    "code": "```verilog\nmodule TopModule (\n    input wire clk,             // Clock input\n    input wire rst,             // Synchronous reset input\n    input wire [2:0] y,         // 3-bit input, y[2] is MSB\n    input wire x,               // 1-bit input\n    output reg Y0,              // 1-bit output, corresponds to next state's LSB\n    output reg z                // 1-bit output\n);\n\n    reg [2:0] state;            // Current state\n\n    always @(posedge clk) begin\n        if (rst) begin\n            state <= 3'b000;\n        end else begin\n            case (y)\n                3'b000: state <= (x ? 3'b001 : 3'b000);\n                3'b001: state <= (x ? 3'b100 : 3'b001);\n                3'b010: state <= (x ? 3'b001 : 3'b010);\n                3'b011: state <= (x ? 3'b010 : 3'b001);\n                3'b100: state <= (x ? 3'b100 : 3'b011);\n                default: state <= 3'b000;\n            endcase\n        end\n    end\n\n    always @(*) begin\n        case (y)\n            3'b000, 3'b001, 3'b010: z = 0;\n            3'b011, 3'b100: z = 1;\n            default: z = 0;\n        endcase\n        Y0 = state[0];\n    end\n\nendmodule\n```",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "S"
    }
}