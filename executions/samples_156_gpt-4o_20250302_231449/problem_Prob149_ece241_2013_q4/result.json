{
    "code": "module TopModule (\n  input logic clk,                // Clock input\n  input logic reset,              // Active-high synchronous reset\n  input logic [2:0] s,            // 3-bit input representing sensor states, where s[2] is MSB\n  output logic fr2,               // Flow rate control output\n  output logic fr1,               // Flow rate control output\n  output logic fr0,               // Flow rate control output\n  output logic dfr                // Supplemental flow valve control output\n);\n\n  logic [2:0] prev_s;             // Register to store previous state of s\n\n  always_ff @(posedge clk) begin\n    if (reset) begin\n      fr2 <= 1'b1;\n      fr1 <= 1'b1;\n      fr0 <= 1'b1;\n      dfr <= 1'b1;\n      prev_s <= 3'b000;\n    end else begin\n      case (s)\n        3'b111: begin\n          fr2 <= 1'b0;\n          fr1 <= 1'b0;\n          fr0 <= 1'b0;\n          dfr <= 1'b0;\n        end\n        3'b110: begin\n          fr2 <= 1'b0;\n          fr1 <= 1'b0;\n          fr0 <= 1'b1;\n          dfr <= 1'b0;\n        end\n        3'b100: begin\n          fr2 <= 1'b0;\n          fr1 <= 1'b1;\n          fr0 <= 1'b1;\n          dfr <= 1'b0;\n        end\n        3'b000: begin\n          fr2 <= 1'b1;\n          fr1 <= 1'b1;\n          fr0 <= 1'b1;\n          dfr <= 1'b1;\n        end\n        default: begin\n          fr2 <= 1'b1;\n          fr1 <= 1'b1;\n          fr0 <= 1'b1;\n          dfr <= 1'b1;\n        end\n      endcase\n\n      // Detect transition from a lower to a higher water level\n      if (s > prev_s) begin\n        dfr <= 1'b1;\n      end\n\n      // Update previous state\n      prev_s <= s;\n    end\n  end\n\nendmodule",
    "test_results": {
        "num_mismatch": 1299,
        "passfail": "R"
    },
    "iterations_used": 1
}