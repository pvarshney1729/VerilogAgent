{
    "code": "```verilog\nmodule TopModule (\n    input wire clk,\n    input wire rst_n,\n    input wire load,\n    input wire ena,\n    input wire [1:0] amount,\n    input wire [63:0] data,\n    output reg [63:0] q\n);\n\n    always @(posedge clk or negedge rst_n) begin\n        if (!rst_n) begin\n            q <= 64'b0;\n        end else if (load) begin\n            q <= data;\n        end else if (ena) begin\n            case (amount)\n                2'b00: q <= {q[62:0], 1'b0}; // Shift left by 1\n                2'b01: q <= {q[55:0], 8'b0}; // Shift left by 8\n                2'b10: q <= {q[63], q[63:1]}; // Arithmetic shift right by 1\n                2'b11: q <= {{8{q[63]}}, q[63:8]}; // Arithmetic shift right by 8\n                default: q <= q; // Default case to hold value\n            endcase\n        end\n    end\n\nendmodule\n```",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "S"
    },
    "iterations_used": 1
}