{
    "code": "module TopModule (\n    input logic clk,         // Clock signal, positive edge-triggered\n    input logic reset,       // Synchronous active high reset\n    input logic x,           // Input signal x\n    output logic z           // Output signal z\n);\n\n    logic [2:0] y;           // State register, 3 bits wide\n\n    always_ff @(posedge clk) begin\n        if (reset) begin\n            y <= 3'b000;\n            z <= 1'b0;\n        end else begin\n            case (y)\n                3'b000: begin\n                    y <= (x ? 3'b001 : 3'b000);\n                    z <= 1'b0;\n                end\n                3'b001: begin\n                    y <= (x ? 3'b100 : 3'b001);\n                    z <= 1'b0;\n                end\n                3'b010: begin\n                    y <= (x ? 3'b001 : 3'b010);\n                    z <= 1'b0;\n                end\n                3'b011: begin\n                    y <= (x ? 3'b010 : 3'b001);\n                    z <= 1'b1;\n                end\n                3'b100: begin\n                    y <= (x ? 3'b100 : 3'b011);\n                    z <= 1'b1;\n                end\n                default: begin\n                    y <= 3'b000; // Default state on unexpected state\n                    z <= 1'b0;\n                end\n            endcase\n        end\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 312,
        "passfail": "R"
    },
    "iterations_used": 2
}