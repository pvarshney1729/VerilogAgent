{
    "code": "```verilog\nmodule TopModule (\n    input logic clk,          // Clock signal, positive edge-triggered\n    input logic reset,        // Active high synchronous reset\n    input logic in,           // Serial data input\n    output logic disc,        // Assert high for one cycle after detecting a discard pattern\n    output logic flag,        // Assert high for one cycle after detecting a flag pattern\n    output logic err          // Assert high for one cycle after detecting an error pattern\n);\n\n    typedef enum logic [2:0] {\n        IDLE,\n        DETECT_1,\n        FLAG,\n        ERROR,\n        DISCARD\n    } state_t;\n\n    state_t current_state, next_state;\n    logic [6:0] shift_reg;\n\n    always_ff @(posedge clk) begin\n        if (reset) begin\n            current_state <= IDLE;\n            shift_reg <= 7'b0;\n        end else begin\n            current_state <= next_state;\n            shift_reg <= {shift_reg[5:0], in};\n        end\n    end\n\n    always_comb begin\n        next_state = current_state;\n        disc = 1'b0;\n        flag = 1'b0;\n        err = 1'b0;\n\n        case (current_state)\n            IDLE: begin\n                if (shift_reg == 7'b0111110) begin\n                    next_state = DISCARD;\n                end else if (shift_reg == 7'b01111110) begin\n                    next_state = FLAG;\n                end else if (shift_reg[6:0] == 7'b1111111) begin\n                    next_state = ERROR;\n                end\n            end\n\n            DISCARD: begin\n                disc = 1'b1;\n                next_state = IDLE;\n            end\n\n            FLAG: begin\n                flag = 1'b1;\n                next_state = IDLE;\n            end\n\n            ERROR: begin\n                err = 1'b1;\n                if (in == 1'b0) begin\n                    next_state = IDLE;\n                end\n            end\n\n            default: next_state = IDLE;\n        endcase\n    end\n\nendmodule\n```",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "S"
    }
}