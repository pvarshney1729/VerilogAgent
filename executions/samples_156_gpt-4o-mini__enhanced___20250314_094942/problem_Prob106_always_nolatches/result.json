{
    "code": "module TopModule(\n    input logic clk,               // Clock input for synchronous operation\n    input logic reset_n,           // Active-low asynchronous reset\n    input logic [15:0] scancode,   // 16-bit input representing PS/2 keyboard scan code (unsigned)\n    output logic left,              // Output signal for left arrow key (active high)\n    output logic down,              // Output signal for down arrow key (active high)\n    output logic right,             // Output signal for right arrow key (active high)\n    output logic up                 // Output signal for up arrow key (active high)\n);\n\nalways @(posedge clk or negedge reset_n) begin\n    if (!reset_n) begin\n        // Asynchronous reset state\n        left <= 1'b0; \n        down <= 1'b0; \n        right <= 1'b0; \n        up <= 1'b0; \n    end else begin\n        // Default output states\n        left <= 1'b0; \n        down <= 1'b0; \n        right <= 1'b0; \n        up <= 1'b0; \n\n        // Process scancode to determine the arrow key pressed\n        case (scancode)\n            16'hE06B: left <= 1'b1;   // Left arrow key pressed\n            16'hE072: down <= 1'b1;   // Down arrow key pressed\n            16'hE074: right <= 1'b1;  // Right arrow key pressed\n            16'hE075: up <= 1'b1;     // Up arrow key pressed\n            default: begin\n                // Explicitly state that all outputs remain low for invalid scancodes\n                left <= 1'b0; \n                down <= 1'b0; \n                right <= 1'b0; \n                up <= 1'b0; \n            end\n        endcase\n    end\nend\n\nendmodule",
    "test_results": {
        "num_mismatch": 30017,
        "passfail": "r"
    }
}