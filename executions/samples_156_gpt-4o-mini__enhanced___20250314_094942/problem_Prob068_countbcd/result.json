{
    "code": "module TopModule (\n    input  logic clk,                // Clock signal (1-bit input)\n    input  logic reset,              // Synchronous active-high reset (1-bit input)\n    output reg [2:0] ena,            // Enable signals for upper three BCD digits (3 bits output)\n    output reg [15:0] q              // 4-digit BCD counter (16 bits output)\n);\n\n    always @(posedge clk) begin\n        if (reset) begin\n            q <= 16'b0000000000000000; // Reset counter to 0\n            ena <= 3'b000;             // Reset enable signals\n        end else begin\n            // Increment logic\n            if (q[3:0] == 4'b1001) begin // Check ones digit\n                q[3:0] <= 4'b0000;      // Reset ones digit\n                ena[0] <= 1'b1;          // Enable tens digit increment\n                if (q[7:4] == 4'b1001) begin // Check tens digit\n                    q[7:4] <= 4'b0000;  // Reset tens digit\n                    ena[1] <= 1'b1;      // Enable hundreds digit increment\n                    if (q[11:8] == 4'b1001) begin // Check hundreds digit\n                        q[11:8] <= 4'b0000; // Reset hundreds digit\n                        ena[2] <= 1'b1;      // Enable thousands digit increment\n                        if (q[15:12] < 4'b1001) begin // Check thousands digit\n                            q[15:12] <= q[15:12] + 1'b1; // Increment thousands digit\n                        end\n                    end else begin\n                        q[11:8] <= q[11:8] + 1'b1; // Increment hundreds digit\n                    end\n                end else begin\n                    q[7:4] <= q[7:4] + 1'b1; // Increment tens digit\n                end\n            end else begin\n                q[3:0] <= q[3:0] + 1'b1; // Increment ones digit\n                ena[0] <= 1'b0; // Disable tens digit increment\n            end\n        end\n    end\n\n    // Ensure enable signals are cleared when not incrementing\n    always @(*) begin\n        if (q[3:0] != 4'b1001) ena[0] = 1'b0;\n        if (q[7:4] != 4'b1001) ena[1] = 1'b0;\n        if (q[11:8] != 4'b1001) ena[2] = 1'b0;\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 20172,
        "passfail": "R"
    }
}