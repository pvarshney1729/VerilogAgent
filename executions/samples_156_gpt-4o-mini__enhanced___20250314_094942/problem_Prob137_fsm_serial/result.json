{
    "code": "module TopModule (\n    input logic clk,          // Clock signal, positive edge triggered\n    input logic reset,        // Active-high synchronous reset\n    input logic in,          // Serial input data bit\n    output logic done         // Output signal indicating byte reception completion\n);\n\n    typedef enum logic [1:0] {\n        IDLE,\n        RECEIVING,\n        VERIFY_STOP\n    } state_t;\n\n    state_t current_state, next_state;\n    logic [7:0] data;\n    logic [2:0] bit_count;\n\n    always_ff @(posedge clk) begin\n        if (reset) begin\n            current_state <= IDLE;\n            done <= 0;\n            bit_count <= 0;\n            data <= 8'b0;\n        end else begin\n            current_state <= next_state;\n            if (current_state == RECEIVING) begin\n                data[bit_count] <= in;\n                bit_count <= bit_count + 1;\n            end\n            if (current_state == VERIFY_STOP && in == 1'b1) begin\n                done <= 1;\n            end else if (current_state == VERIFY_STOP) begin\n                done <= 0;\n            end\n        end\n    end\n\n    always_comb begin\n        case (current_state)\n            IDLE: begin\n                if (in == 1'b0) begin\n                    next_state = RECEIVING;\n                    bit_count = 0;\n                end else begin\n                    next_state = IDLE;\n                end\n            end\n            RECEIVING: begin\n                if (bit_count == 3'b111) begin\n                    next_state = VERIFY_STOP;\n                end else begin\n                    next_state = RECEIVING;\n                end\n            end\n            VERIFY_STOP: begin\n                if (in == 1'b1) begin\n                    next_state = IDLE;\n                end else begin\n                    next_state = VERIFY_STOP;\n                end\n            end\n            default: next_state = IDLE;\n        endcase\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 572,
        "passfail": "R"
    }
}