<ENHANCED_SPEC>
The module named `TopModule` should be implemented with the following interface, where all input and output ports are one bit unless otherwise specified:

- `input clk`: Clock signal for synchronizing the state transitions.
- `input areset`: Asynchronous active-high reset signal, which resets the state to OFF when asserted.
- `input j`: Input signal used to control state transitions.
- `input k`: Input signal used to control state transitions.
- `output out`: Output signal representing the current state.

The module shall implement a Moore state machine with the following characteristics:

1. **State Definitions:**
   - State OFF: 
     - Output (`out`) is `0`.
     - Transitions:
       - If `j` is `0`, remain in state OFF.
       - If `j` is `1`, transition to state ON.

   - State ON:
     - Output (`out`) is `1`.
     - Transitions:
       - If `k` is `0`, remain in state ON.
       - If `k` is `1`, transition to state OFF.

2. **State Encoding:**
   - State OFF: Encoded as `0`.
   - State ON: Encoded as `1`.

3. **Reset Behavior:**
   - The `areset` input is an active-high, asynchronous reset signal.
   - When `areset` is asserted (`areset = 1`), the state is immediately reset to OFF regardless of the clock.
   - When `areset` is deasserted (`areset = 0`), normal operation resumes based on the clock.

4. **Clock and Sequential Logic:**
   - State transitions occur on the rising edge of the `clk` signal.
   - Ensure no race conditions by correctly synchronizing the state transitions with the clock.

5. **Initial State:**
   - On power-up or after reset, the module should initialize to the OFF state.

6. **Bit Indexing:**
   - Not applicable as all signals are single-bit.

7. **Edge Cases:**
   - Ensure that asynchronous reset (`areset`) consistently sets the state to OFF from any current state, independent of inputs `j` and `k`.

Ensure all signals and state transitions are clearly and correctly implemented following the specified behavior for the Moore state machine.
</ENHANCED_SPEC>