{
    "code": "module TopModule (\n    input  logic clk,\n    input  logic reset,\n    input  logic in,\n    output logic out\n);\n\n    // State encoding\n    localparam logic [1:0] STATE_A = 2'b00;\n    localparam logic [1:0] STATE_B = 2'b01;\n    localparam logic [1:0] STATE_C = 2'b10;\n    localparam logic [1:0] STATE_D = 2'b11;\n\n    // State register\n    logic [1:0] state, next_state;\n\n    // State register with synchronous active high reset\n    always @(posedge clk) begin\n        if (reset)\n            state <= STATE_A;  // Reset to state A\n        else\n            state <= next_state;\n    end\n\n    // Next state logic\n    always @(*) begin\n        case (state)\n            STATE_A: next_state = (in == 1'b0) ? STATE_A : STATE_B;\n            STATE_B: next_state = (in == 1'b0) ? STATE_C : STATE_B;\n            STATE_C: next_state = (in == 1'b0) ? STATE_A : STATE_D;\n            STATE_D: next_state = (in == 1'b0) ? STATE_C : STATE_B;\n            default: next_state = STATE_A; // Default to state A\n        endcase\n    end\n\n    // Output logic\n    always @(*) begin\n        case (state)\n            STATE_A: out = 1'b0;\n            STATE_B: out = 1'b0;\n            STATE_C: out = 1'b0;\n            STATE_D: out = 1'b1;\n            default: out = 1'b0;\n        endcase\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "."
    }
}