{
    "code": "module TopModule (\n    input  logic clk,      // Clock signal\n    input  logic areset,   // Asynchronous reset signal, active high\n    input  logic in,       // Input signal for state transitions\n    output logic out       // Output signal, 1 bit\n);\n\n    typedef enum logic {A, B} state_t;\n    state_t state;\n\n    always @(posedge clk or posedge areset) begin\n        if (areset) begin\n            state <= B;\n        end else begin\n            case (state)\n                A: state <= (in == 0) ? B : A;\n                B: state <= (in == 0) ? A : B;\n                default: state <= A; // Default to A in case of an invalid state\n            endcase\n        end\n    end\n\n    always @(*) begin\n        case (state)\n            A: out = 0;\n            B: out = 1;\n            default: out = 0; // Default output for safety\n        endcase\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "."
    }
}