{
    "code": "module TopModule (\n    input logic clk,         // Clock input, positive-edge triggered\n    input logic enable,      // Synchronous active-high enable for shifting\n    input logic S,           // Serial input for the shift register\n    input logic [2:0] ABC,   // 3-bit input for multiplexer selection\n    output logic Z           // Output of the 3-input logic function\n);\n\n    logic [7:0] Q;          // 8-bit shift register\n\n    // Shift Register Implementation\n    always @(posedge clk) begin\n        if (enable) begin\n            Q <= {Q[6:0], S}; // Shift left and input S into Q[0]\n        end\n    end\n\n    // Multiplexer Implementation\n    always @(*) begin\n        case (ABC)\n            3'b000: Z = Q[0];\n            3'b001: Z = Q[1];\n            3'b010: Z = Q[2];\n            3'b011: Z = Q[3];\n            3'b100: Z = Q[4];\n            3'b101: Z = Q[5];\n            3'b110: Z = Q[6];\n            3'b111: Z = Q[7];\n            default: Z = 1'b0; // Default case for safety\n        endcase\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "C"
    }
}