{
    "code": "module TopModule (\n  input wire clk,         \n  input wire x,           \n  input wire [2:0] y,     \n  input wire reset_n,     // Asynchronous active-low reset\n  output reg Y0,          \n  output reg z            \n);\n\n  reg [2:0] next_state;\n\n  always @(*) begin\n    case (y)\n      3'b000: next_state = (x == 1'b0) ? 3'b000 : 3'b001;\n      3'b001: next_state = (x == 1'b0) ? 3'b001 : 3'b100;\n      3'b010: next_state = (x == 1'b0) ? 3'b010 : 3'b001;\n      3'b011: next_state = (x == 1'b0) ? 3'b001 : 3'b010;\n      3'b100: next_state = (x == 1'b0) ? 3'b011 : 3'b100;\n      default: next_state = 3'b000; // Safe state\n    endcase\n  end\n\n  always @(posedge clk or negedge reset_n) begin\n    if (!reset_n) begin\n      Y0 <= 1'b0;\n      z <= 1'b0;\n    end else begin\n      Y0 <= next_state[0];\n      z <= (y == 3'b011 && x == 1'b1) || (y == 3'b100) ? 1'b1 : 1'b0;\n    end\n  end\n\nendmodule",
    "test_results": {
        "num_mismatch": 88,
        "passfail": "r"
    }
}