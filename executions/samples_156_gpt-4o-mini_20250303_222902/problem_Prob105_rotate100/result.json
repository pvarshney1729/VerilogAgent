{
    "code": "module TopModule (\n    input logic clk,           // Clock signal; operations occur on the rising edge.\n    input logic load,         // Synchronous active-high load signal.\n    input logic [1:0] ena,    // Enable signal to control rotation direction.\n    input logic [99:0] data,   // 100-bit data bus for loading the shift register.\n    output logic [99:0] q      // 100-bit output representing the current state of the rotator.\n);\n\n    // Synchronous reset and initial state\n    always @(posedge clk) begin\n        if (load) begin\n            q <= data;         // Load data into q\n        end else begin\n            case (ena)\n                2'b01: q <= {q[98:0], q[99]}; // Rotate right\n                2'b10: q <= {q[0], q[99:1]};  // Rotate left\n                default: q <= q;              // Maintain current state\n            endcase\n        end\n    end\n\n    // Initialize q to zero in simulation\n    initial begin\n        q = 100'b0; // Initial state\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 3292,
        "passfail": "R"
    }
}