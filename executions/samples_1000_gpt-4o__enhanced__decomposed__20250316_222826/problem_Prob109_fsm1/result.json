{
    "code": "module TopModule (\n    input logic clk,\n    input logic areset,\n    input logic in,\n    output logic out\n);\n\n    // State encoding\n    typedef enum logic {A = 1'b0, B = 1'b1} state_t;\n    state_t state, next_state;\n\n    // State register with asynchronous reset\n    always_ff @(posedge clk or posedge areset) begin\n        if (areset)\n            state <= B;\n        else\n            state <= next_state;\n    end\n\n    // Next state logic\n    always_comb begin\n        case (state)\n            A: next_state = (in) ? A : B;\n            B: next_state = (in) ? B : A;\n            default: next_state = B; // Default to state B for safety\n        endcase\n    end\n\n    // Output logic\n    assign out = (state == B) ? 1'b1 : 1'b0;\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "e"
    }
}