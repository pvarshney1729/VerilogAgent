{
    "code": "module moore_fsm (\n    input logic clk,\n    input logic reset,\n    input logic in,\n    output logic out\n);\n\n    typedef enum logic [1:0] {\n        S0 = 2'b00,\n        S1 = 2'b01,\n        S2 = 2'b10\n    } state_t;\n\n    state_t current_state, next_state;\n\n    // State transition logic\n    always @(*) begin\n        case (current_state)\n            S0: next_state = in ? S1 : S0;\n            S1: next_state = in ? S2 : S0;\n            S2: next_state = in ? S2 : S1;\n            default: next_state = S0;\n        endcase\n    end\n\n    // Output logic\n    always @(*) begin\n        case (current_state)\n            S0: out = 1'b0;\n            S1: out = 1'b1;\n            S2: out = 1'b0;\n            default: out = 1'b0;\n        endcase\n    end\n\n    // State update logic with synchronous reset\n    always @(*) begin\n        if (reset) begin\n            current_state = S0;\n        end else begin\n            current_state = next_state;\n        end\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "m"
    },
    "iterations_used": 3
}