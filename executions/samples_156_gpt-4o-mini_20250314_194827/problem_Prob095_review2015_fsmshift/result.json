{
    "code": "module TopModule (\n    input logic clk,\n    input logic reset,\n    input logic data_in,\n    output logic shift_ena\n);\n\n    typedef enum logic [1:0] {\n        S0 = 2'b00,\n        S1 = 2'b01,\n        S2 = 2'b10,\n        S3 = 2'b11\n    } state_t;\n\n    state_t current_state, next_state;\n    logic [3:0] shift_counter;\n\n    // Synchronous reset and state transition\n    always @(posedge clk) begin\n        if (reset) begin\n            current_state <= S0;\n            shift_counter <= 4'b0000;\n        end else begin\n            current_state <= next_state;\n            if (shift_ena) begin\n                shift_counter <= shift_counter + 1'b1;\n            end else begin\n                shift_counter <= 4'b0000;\n            end\n        end\n    end\n\n    // State machine for pattern detection\n    always @(*) begin\n        case (current_state)\n            S0: begin\n                if (data_in) begin\n                    next_state = S1;\n                end else begin\n                    next_state = S0;\n                end\n            end\n            S1: begin\n                if (data_in) begin\n                    next_state = S2;\n                end else begin\n                    next_state = S0;\n                end\n            end\n            S2: begin\n                if (data_in) begin\n                    next_state = S3;\n                end else begin\n                    next_state = S0;\n                end\n            end\n            S3: begin\n                if (data_in) begin\n                    next_state = S3; // Stay in S3 if the pattern continues\n                end else begin\n                    next_state = S0;\n                end\n            end\n            default: next_state = S0;\n        endcase\n    end\n\n    // Shift enable logic for 4 clock cycles\n    assign shift_ena = (current_state == S3 && shift_counter < 4'b0011);\n\nendmodule",
    "test_results": {
        "num_mismatch": 10,
        "passfail": "R"
    },
    "iterations_used": 3
}