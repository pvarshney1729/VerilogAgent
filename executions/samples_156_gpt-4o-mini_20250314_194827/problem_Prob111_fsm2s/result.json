{
    "code": "module TopModule (\n    input logic clk,\n    input logic reset,\n    input logic j,\n    input logic k,\n    output logic out\n);\n\n    typedef logic state_t;\n    state_t state, next_state;\n\n    // State encoding\n    localparam OFF = 1'b0;\n    localparam ON = 1'b1;\n\n    // Synchronous reset and state transition\n    always @(posedge clk) begin\n        if (reset) begin\n            state <= OFF;\n            out <= 1'b0;\n        end else begin\n            state <= next_state;\n        end\n    end\n\n    // Next state logic\n    always @(*) begin\n        case (state)\n            OFF: begin\n                if (j) begin\n                    next_state = ON;\n                end else begin\n                    next_state = OFF;\n                end\n            end\n            ON: begin\n                if (k) begin\n                    next_state = OFF;\n                end else begin\n                    next_state = ON;\n                end\n            end\n            default: begin\n                next_state = OFF; // Default case to avoid latches\n            end\n        endcase\n    end\n\n    // Output logic\n    always @(*) begin\n        out = (state == ON) ? 1'b1 : 1'b0;\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "."
    },
    "iterations_used": 1
}