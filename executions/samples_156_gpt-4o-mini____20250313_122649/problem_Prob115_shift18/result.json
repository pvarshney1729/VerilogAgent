{
    "code": "module TopModule (\n    input  logic clk,\n    input  logic load,\n    input  logic ena,\n    input  logic [1:0] amount,\n    input  logic [63:0] data,\n    output logic [63:0] q\n);\n\n    logic [63:0] shift_reg;\n\n    always @(posedge clk) begin\n        if (load) begin\n            shift_reg <= data;\n        end else if (ena) begin\n            case (amount)\n                2'b00: shift_reg <= shift_reg << 1;      // Shift left by 1 bit\n                2'b01: shift_reg <= shift_reg << 8;      // Shift left by 8 bits\n                2'b10: shift_reg <= {shift_reg[63], shift_reg[63:1]}; // Arithmetic right shift by 1 bit\n                2'b11: shift_reg <= {shift_reg[63], shift_reg[63:8]}; // Arithmetic right shift by 8 bits\n                default: shift_reg <= shift_reg;          // No operation\n            endcase\n        end\n    end\n\n    assign q = shift_reg;\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "R"
    }
}