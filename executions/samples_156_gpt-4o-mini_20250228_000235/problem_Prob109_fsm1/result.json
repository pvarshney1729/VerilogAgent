{
    "code": "module TopModule (\n    input  logic clk,\n    input  logic areset,\n    input  logic in,\n    output logic out\n);\n\n    typedef enum logic {A, B} state_t;\n    state_t state, next_state;\n\n    always_ff @(posedge clk or posedge areset) begin\n        if (areset) begin\n            state <= B;\n        end else begin\n            state <= next_state;\n        end\n    end\n\n    always_comb begin\n        case (state)\n            A: begin\n                if (in == 1'b0) begin\n                    next_state = B;\n                end else begin\n                    next_state = A;\n                end\n            end\n            B: begin\n                if (in == 1'b0) begin\n                    next_state = A;\n                end else begin\n                    next_state = B;\n                end\n            end\n            default: next_state = B; // Default case to avoid latches\n        endcase\n    end\n\n    assign out = (state == B) ? 1'b1 : 1'b0;\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "S"
    }
}