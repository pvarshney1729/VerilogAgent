{
    "code": "module TopModule (\n    input  logic a,\n    input  logic b,\n    input  logic c,\n    input  logic d,\n    output logic out_sop,\n    output logic out_pos\n);\n\n    // out_sop is 1 for inputs corresponding to 2, 7, 15\n    assign out_sop = (a == 1'b0 && b == 1'b0 && c == 1'b1 && d == 1'b0) || // 2\n                     (a == 1'b0 && b == 1'b1 && c == 1'b1 && d == 1'b1) || // 7\n                     (a == 1'b1 && b == 1'b1 && c == 1'b1 && d == 1'b1);   // 15\n\n    // out_pos is 0 for inputs corresponding to 0, 1, 4, 5, 6, 9, 10, 13, 14\n    assign out_pos = (a == 1'b0 && b == 1'b0 && c == 1'b0 && d == 1'b0) || // 0\n                     (a == 1'b0 && b == 1'b0 && c == 1'b0 && d == 1'b1) || // 1\n                     (a == 1'b0 && b == 1'b1 && c == 1'b0 && d == 1'b0) || // 4\n                     (a == 1'b0 && b == 1'b1 && c == 1'b0 && d == 1'b1) || // 5\n                     (a == 1'b0 && b == 1'b1 && c == 1'b1 && d == 1'b0) || // 6\n                     (a == 1'b0 && b == 1'b1 && c == 1'b1 && d == 1'b1) || // 9\n                     (a == 1'b1 && b == 1'b0 && c == 1'b0 && d == 1'b0) || // 10\n                     (a == 1'b1 && b == 1'b0 && c == 1'b1 && d == 1'b0) || // 13\n                     (a == 1'b1 && b == 1'b0 && c == 1'b1 && d == 1'b1);   // 14\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "R"
    }
}