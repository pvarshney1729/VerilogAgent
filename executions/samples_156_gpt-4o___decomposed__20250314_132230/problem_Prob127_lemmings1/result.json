{
    "code": "module TopModule(\n    input  logic clk,\n    input  logic areset,\n    input  logic bump_left,\n    input  logic bump_right,\n    output logic walk_left,\n    output logic walk_right\n);\n\n    // State encoding\n    typedef enum logic {LEFT, RIGHT} state_t;\n    state_t current_state, next_state;\n\n    // State transition logic\n    always @(posedge clk or posedge areset) begin\n        if (areset) begin\n            current_state <= LEFT;\n        end else begin\n            current_state <= next_state;\n        end\n    end\n\n    // Next state logic\n    always @(*) begin\n        case (current_state)\n            LEFT: begin\n                if (bump_left) begin\n                    next_state = RIGHT;\n                end else begin\n                    next_state = LEFT;\n                end\n            end\n            RIGHT: begin\n                if (bump_right) begin\n                    next_state = LEFT;\n                end else begin\n                    next_state = RIGHT;\n                end\n            end\n        endcase\n    end\n\n    // Output logic\n    always @(*) begin\n        case (current_state)\n            LEFT: begin\n                walk_left = 1;\n                walk_right = 0;\n            end\n            RIGHT: begin\n                walk_left = 0;\n                walk_right = 1;\n            end\n        endcase\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "."
    }
}