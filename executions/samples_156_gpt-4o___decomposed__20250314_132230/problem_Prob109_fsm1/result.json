{
    "code": "module TopModule(\n    input logic clk,\n    input logic areset,\n    input logic in,\n    output logic out\n);\n\n    // State encoding\n    typedef enum logic [1:0] {STATE_A = 2'b00, STATE_B = 2'b01} state_t;\n    state_t current_state, next_state;\n\n    // State transition\n    always_ff @(posedge clk or posedge areset) begin\n        if (areset) \n            current_state <= STATE_B;\n        else \n            current_state <= next_state;\n    end\n\n    // Next state logic\n    always_comb begin\n        case (current_state)\n            STATE_A: next_state = (in) ? STATE_A : STATE_B;\n            STATE_B: next_state = (in) ? STATE_B : STATE_A;\n            default: next_state = STATE_B;\n        endcase\n    end\n\n    // Output logic\n    always_comb begin\n        case (current_state)\n            STATE_A: out = 1'b0;\n            STATE_B: out = 1'b1;\n            default: out = 1'b1;\n        endcase\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "e"
    }
}