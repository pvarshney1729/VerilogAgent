{
    "code": "module TopModule (\n    input logic clk,\n    input logic areset,\n    input logic predict_valid,\n    input logic [6:0] predict_pc,\n    output logic predict_taken,\n    output logic [6:0] predict_history,\n    input logic train_valid,\n    input logic train_taken,\n    input logic train_mispredicted,\n    input logic [6:0] train_history,\n    input logic [6:0] train_pc\n);\n\n    // Define the table of two-bit saturating counters\n    logic [1:0] PHT [0:127]; // Pattern History Table with 128 entries\n\n    // Global branch history register\n    logic [6:0] global_history;\n\n    // Internal wires for index calculation\n    logic [6:0] predict_index;\n    logic [6:0] train_index;\n\n    // Calculate the index for prediction and training\n    assign predict_index = predict_pc ^ global_history;\n    assign train_index = train_pc ^ train_history;\n\n    // Asynchronous reset and sequential logic\n    always_ff @(posedge clk or posedge areset) begin\n        if (areset) begin\n            // Initialize PHT and global history on reset\n            for (int i = 0; i < 128; i++) begin\n                PHT[i] <= 2'b01; // Weakly not taken\n            end\n            global_history <= 7'b0;\n        end else begin\n            // Training logic\n            if (train_valid) begin\n                // Update the PHT based on the actual outcome\n                if (train_taken) begin\n                    if (PHT[train_index] < 2'b11) begin\n                        PHT[train_index] <= PHT[train_index] + 1;\n                    end\n                end else begin\n                    if (PHT[train_index] > 2'b00) begin\n                        PHT[train_index] <= PHT[train_index] - 1;\n                    end\n                end\n\n                // Update global history on misprediction recovery\n                if (train_mispredicted) begin\n                    global_history <= {train_history[5:0], train_taken};\n                end\n            end else if (predict_valid) begin\n                // Update global history with the predicted outcome\n                global_history <= {global_history[5:0], (PHT[predict_index] > 2'b01)};\n            end\n        end\n    end\n\n    // Output prediction logic\n    always_comb begin\n        if (predict_valid) begin\n            predict_taken = (PHT[predict_index] > 2'b01);\n            predict_history = global_history;\n        end else begin\n            predict_taken = 1'b0;\n            predict_history = 7'b0;\n        end\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 482,
        "passfail": "R"
    }
}