{
    "code": "module TopModule (\n    input logic clk,\n    input logic reset,\n    input logic [2:0] s,\n    output logic fr2,\n    output logic fr1,\n    output logic fr0,\n    output logic dfr\n);\n\n    logic [2:0] last_s;\n\n    always @(posedge clk) begin\n        if (reset) begin\n            fr2 <= 1'b1; // All outputs to maximum flow (low water level)\n            fr1 <= 1'b1;\n            fr0 <= 1'b1;\n            dfr <= 1'b0;\n            last_s <= 3'b0; // No sensors asserted\n        end else begin\n            last_s <= s;\n            case (s)\n                3'b111: begin // Above s[2]\n                    fr2 <= 1'b0;\n                    fr1 <= 1'b0;\n                    fr0 <= 1'b0;\n                    dfr <= 1'b0;\n                end\n                3'b110: begin // Between s[2] and s[1]\n                    fr2 <= 1'b0;\n                    fr1 <= 1'b0;\n                    fr0 <= 1'b1;\n                    dfr <= (last_s < s) ? 1'b1 : 1'b0; // Supplemental flow valve control\n                end\n                3'b100: begin // Between s[1] and s[0]\n                    fr2 <= 1'b0;\n                    fr1 <= 1'b1;\n                    fr0 <= 1'b1;\n                    dfr <= (last_s < s) ? 1'b1 : 1'b0;\n                end\n                3'b000: begin // Below s[0]\n                    fr2 <= 1'b1;\n                    fr1 <= 1'b1;\n                    fr0 <= 1'b1;\n                    dfr <= 1'b0;\n                end\n                default: begin\n                    fr2 <= 1'b1;\n                    fr1 <= 1'b1;\n                    fr0 <= 1'b1;\n                    dfr <= 1'b0; // Default case for unhandled sensor states\n                end\n            endcase\n        end\n    end\nendmodule",
    "test_results": {
        "num_mismatch": 1807,
        "passfail": "R"
    }
}