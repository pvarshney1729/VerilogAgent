{
    "code": "```verilog\nmodule TopModule(\n    input logic clk,\n    input logic reset,\n    input logic data,\n    output logic start_shifting\n);\n\n    typedef enum logic [2:0] {\n        STATE_0     = 3'b000,\n        STATE_1     = 3'b001,\n        STATE_2     = 3'b010,\n        STATE_3     = 3'b011,\n        STATE_FOUND = 3'b100\n    } state_t;\n\n    state_t current_state, next_state;\n\n    // State transition logic\n    always_ff @(posedge clk) begin\n        if (reset) begin\n            current_state <= STATE_0;\n            start_shifting <= 1'b0;\n        end else begin\n            current_state <= next_state;\n            if (current_state == STATE_FOUND) begin\n                start_shifting <= 1'b1;\n            end\n        end\n    end\n\n    // Next state logic\n    always_comb begin\n        case (current_state)\n            STATE_0: begin\n                if (data) next_state = STATE_1;\n                else next_state = STATE_0;\n            end\n            STATE_1: begin\n                if (data) next_state = STATE_2;\n                else next_state = STATE_0;\n            end\n            STATE_2: begin\n                if (data) next_state = STATE_2;\n                else next_state = STATE_3;\n            end\n            STATE_3: begin\n                if (data) next_state = STATE_FOUND;\n                else next_state = STATE_0;\n            end\n            STATE_FOUND: begin\n                next_state = STATE_FOUND;\n            end\n            default: begin\n                next_state = STATE_0;\n            end\n        endcase\n    end\n\nendmodule\n```",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "S"
    }
}