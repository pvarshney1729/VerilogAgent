{
    "code": "module TopModule (\n    input logic clk,\n    input logic areset,\n    input logic x,\n    output logic z\n);\n\n    typedef enum logic [1:0] {\n        IDLE,\n        NEGATE,\n        ADD_ONE,\n        OUTPUT\n    } state_t;\n\n    state_t current_state, next_state;\n    logic negate_flag;\n    logic add_one_flag;\n\n    always_ff @(posedge clk or posedge areset) begin\n        if (areset) begin\n            current_state <= IDLE;\n            z <= 1'b0;\n            negate_flag <= 1'b0;\n            add_one_flag <= 1'b0;\n        end else begin\n            current_state <= next_state;\n            case (current_state)\n                IDLE: begin\n                    z <= 1'b0;\n                end\n                NEGATE: begin\n                    z <= ~x;\n                end\n                ADD_ONE: begin\n                    z <= x ^ add_one_flag;\n                    add_one_flag <= add_one_flag & x;\n                end\n                OUTPUT: begin\n                    z <= x;\n                end\n            endcase\n        end\n    end\n\n    always_comb begin\n        next_state = current_state;\n        case (current_state)\n            IDLE: begin\n                if (x == 1'b1) begin\n                    next_state = NEGATE;\n                    negate_flag = 1'b1;\n                    add_one_flag = 1'b1;\n                end\n            end\n            NEGATE: begin\n                if (negate_flag) begin\n                    next_state = ADD_ONE;\n                end else begin\n                    next_state = OUTPUT;\n                end\n            end\n            ADD_ONE: begin\n                next_state = OUTPUT;\n            end\n            OUTPUT: begin\n                if (x == 1'b1) begin\n                    next_state = NEGATE;\n                    negate_flag = 1'b1;\n                    add_one_flag = 1'b1;\n                end else begin\n                    next_state = IDLE;\n                end\n            end\n        endcase\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 151,
        "passfail": "R"
    }
}