{
    "code": "```verilog\n[BEGIN]\nmodule TopModule (\n    input logic clk,\n    input logic load,\n    input logic [9:0] data,\n    output logic tc\n);\n\n    logic [9:0] counter;\n\n    always_ff @(posedge clk) begin\n        if (load) begin\n            counter <= data;\n        end else if (counter > 10'b0) begin\n            counter <= counter - 10'b1;\n        end\n    end\n\n    always_ff @(posedge clk) begin\n        if (load && data == 10'b0) begin\n            tc <= 1'b1;\n        end else if (counter == 10'b0) begin\n            tc <= 1'b1;\n        end else begin\n            tc <= 1'b0;\n        end\n    end\n\nendmodule\n[DONE]\n```",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "S"
    },
    "iterations": [
        {
            "iteration": 0,
            "code": "```verilog\nmodule TopModule (\n    input logic clk,\n    input logic load,\n    input logic [9:0] data,\n    output logic tc\n);\n\n    logic [9:0] counter;\n\n    always_ff @(posedge clk) begin\n        if (load) begin\n            counter <= data;\n        end else if (counter > 0) begin\n            counter <= counter - 1;\n        end\n    end\n\n    always_ff @(posedge clk) begin\n        if (load && data == 0) begin\n            tc <= 1;\n        end else if (counter == 0) begin\n            tc <= 1;\n        end else begin\n            tc <= 0;\n        end\n    end\n\nendmodule\n```",
            "issues": [
                "Numeric constants should have explicit size (e.g., 1'b0 not 0)",
                "syntax_error: syntax error"
            ]
        },
        {
            "iteration": 1,
            "code": "```verilog\nmodule TopModule (\n    input logic clk,\n    input logic load,\n    input logic [9:0] data,\n    output logic tc\n);\n\n    logic [9:0] counter;\n\n    always_ff @(posedge clk) begin\n        if (load) begin\n            counter <= data;\n        end else if (counter > 10'b0) begin\n            counter <= counter - 10'b1;\n        end\n    end\n\n    always_ff @(posedge clk) begin\n        if (load && data == 10'b0) begin\n            tc <= 1'b1;\n        end else if (counter == 10'b0) begin\n            tc <= 1'b1;\n        end else begin\n            tc <= 1'b0;\n        end\n    end\n\nendmodule\n```",
            "issues": [
                "syntax_error: syntax error"
            ]
        },
        {
            "iteration": 2,
            "code": "```verilog\n[BEGIN]\nmodule TopModule (\n    input logic clk,\n    input logic load,\n    input logic [9:0] data,\n    output logic tc\n);\n\n    logic [9:0] counter;\n\n    always_ff @(posedge clk) begin\n        if (load) begin\n            counter <= data;\n        end else if (counter > 10'b0) begin\n            counter <= counter - 10'b1;\n        end\n    end\n\n    always_ff @(posedge clk) begin\n        if (load && data == 10'b0) begin\n            tc <= 1'b1;\n        end else if (counter == 10'b0) begin\n            tc <= 1'b1;\n        end else begin\n            tc <= 1'b0;\n        end\n    end\n\nendmodule\n[DONE]\n```",
            "issues": [
                "syntax_error: syntax error"
            ]
        }
    ],
    "refinement_count": 2,
    "remaining_issues": [
        "syntax_error: syntax error"
    ],
    "testbench_results": {}
}