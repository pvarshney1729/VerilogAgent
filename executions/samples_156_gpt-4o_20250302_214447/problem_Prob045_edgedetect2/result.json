{
    "code": "module TopModule (\n    input logic clk,             // Clock signal, positive edge-triggered\n    input logic reset_n,         // Synchronous reset signal, active low\n    input logic [7:0] in,        // 8-bit input vector, unsigned\n    output logic [7:0] anyedge   // 8-bit output vector, representing edge detection result\n);\n\n    logic [7:0] prev_in; // Register to hold the previous state of the input\n\n    always @(posedge clk) begin\n        if (!reset_n) begin\n            prev_in <= 8'b0;\n            anyedge <= 8'b0;\n        end else begin\n            anyedge <= (in ^ prev_in); // XOR to detect change\n            prev_in <= in;             // Update previous input state\n        end\n    end\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "."
    }
}