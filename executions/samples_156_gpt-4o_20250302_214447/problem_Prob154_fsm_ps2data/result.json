{
    "code": "```verilog\nmodule TopModule (\n    input logic clk,\n    input logic reset,\n    input logic [7:0] in,\n    output logic [23:0] out_bytes,\n    output logic done\n);\n\n    typedef enum logic [1:0] {\n        IDLE = 2'b00,\n        RECEIVE = 2'b01,\n        DONE = 2'b10\n    } state_t;\n\n    state_t current_state, next_state;\n    logic [1:0] byte_count;\n\n    always_ff @(posedge clk) begin\n        if (reset) begin\n            current_state <= IDLE;\n            out_bytes <= 24'h000000;\n            done <= 1'b0;\n            byte_count <= 2'b00;\n        end else begin\n            current_state <= next_state;\n            if (current_state == RECEIVE) begin\n                out_bytes <= {out_bytes[15:0], in};\n                byte_count <= byte_count + 1;\n            end\n            if (current_state == DONE) begin\n                done <= 1'b1;\n            end else begin\n                done <= 1'b0;\n            end\n        end\n    end\n\n    always_comb begin\n        next_state = current_state;\n        case (current_state)\n            IDLE: begin\n                if (in[3] == 1'b1) begin\n                    next_state = RECEIVE;\n                end\n            end\n            RECEIVE: begin\n                if (byte_count == 2'b10) begin\n                    next_state = DONE;\n                end\n            end\n            DONE: begin\n                next_state = IDLE;\n            end\n            default: begin\n                next_state = IDLE;\n            end\n        endcase\n    end\n\nendmodule\n```",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "S"
    }
}