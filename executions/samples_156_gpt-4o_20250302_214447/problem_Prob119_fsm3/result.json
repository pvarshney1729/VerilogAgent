{
    "code": "module TopModule (\n    input  logic clk,       // Clock signal, positive edge-triggered\n    input  logic areset,    // Asynchronous reset signal, active high\n    input  logic in,        // Input signal, unsigned, 1-bit\n    output logic out        // Output signal, unsigned, 1-bit\n);\n\n    typedef enum logic [1:0] {\n        A = 2'b00,\n        B = 2'b01,\n        C = 2'b10,\n        D = 2'b11\n    } state_t;\n\n    state_t current_state, next_state;\n\n    // State transition logic\n    always @(*) begin\n        case (current_state)\n            A: next_state = (in) ? B : A;\n            B: next_state = (in) ? B : C;\n            C: next_state = (in) ? D : A;\n            D: next_state = (in) ? B : C;\n            default: next_state = A;\n        endcase\n    end\n\n    // State register and output logic\n    always @(posedge clk or posedge areset) begin\n        if (areset) begin\n            current_state <= A;\n            out <= 0;\n        end else begin\n            current_state <= next_state;\n            case (current_state)\n                A, B, C: out <= 0;\n                D: out <= 1;\n                default: out <= 0;\n            endcase\n        end\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "e"
    }
}