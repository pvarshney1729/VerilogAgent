{
    "code": "module TopModule (\n    input  logic clk,\n    input  logic x,\n    input  logic [2:0] y,\n    output logic Y0,\n    output logic z\n);\n\n    logic [2:0] state, next_state;\n\n    // State transition logic\n    always @(*) begin\n        case (state)\n            3'b000: next_state = (x) ? 3'b001 : 3'b000;\n            3'b001: next_state = (x) ? 3'b100 : 3'b001;\n            3'b010: next_state = (x) ? 3'b001 : 3'b010;\n            3'b011: next_state = (x) ? 3'b010 : 3'b001;\n            3'b100: next_state = (x) ? 3'b100 : 3'b011;\n            default: next_state = 3'b000;\n        endcase\n    end\n\n    // Output logic\n    assign z = (state == 3'b011) || (state == 3'b100);\n    assign Y0 = next_state[0];\n\n    // State register with synchronous reset\n    always @(posedge clk) begin\n        state <= next_state;\n    end\n\n    // Initialize state to zero\n    initial begin\n        state = 3'b000;\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "R"
    }
}