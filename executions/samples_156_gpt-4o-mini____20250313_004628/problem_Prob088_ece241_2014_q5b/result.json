{
    "code": "module TopModule (\n    input  logic clk,\n    input  logic areset,\n    input  logic x,\n    output logic z\n);\n\n    typedef enum logic [1:0] {\n        A = 2'b01,\n        B = 2'b10\n    } state_t;\n\n    state_t current_state, next_state;\n\n    // Asynchronous reset to state A\n    always_ff @(posedge clk or posedge areset) begin\n        if (areset) begin\n            current_state <= A;\n        end else begin\n            current_state <= next_state;\n        end\n    end\n\n    // Next state logic\n    always_comb begin\n        case (current_state)\n            A: begin\n                if (x) begin\n                    next_state = B;\n                    z = 1'b1;\n                end else begin\n                    next_state = A;\n                    z = 1'b0;\n                end\n            end\n            B: begin\n                if (x) begin\n                    next_state = B;\n                    z = 1'b0;\n                end else begin\n                    next_state = B;\n                    z = 1'b1;\n                end\n            end\n            default: begin\n                next_state = A;\n                z = 1'b0;\n            end\n        endcase\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "."
    }
}