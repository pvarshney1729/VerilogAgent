{
    "code": "module TopModule(\n    input logic clk,\n    input logic areset,\n    input logic bump_left,\n    input logic bump_right,\n    input logic ground,\n    input logic dig,\n    output logic walk_left,\n    output logic walk_right,\n    output logic aaah,\n    output logic digging\n);\n\n    typedef enum logic [2:0] {\n        WALK_LEFT = 3'b000,\n        WALK_RIGHT = 3'b001,\n        FALLING = 3'b010,\n        DIGGING = 3'b011,\n        SPLATTER = 3'b100\n    } state_t;\n\n    state_t current_state, next_state;\n    logic [4:0] fall_counter;\n\n    always_ff @(posedge clk or posedge areset) begin\n        if (areset) begin\n            current_state <= WALK_LEFT;\n            fall_counter <= 5'd0;\n        end else begin\n            current_state <= next_state;\n            if (current_state == FALLING)\n                fall_counter <= fall_counter + 1;\n            else\n                fall_counter <= 5'd0;\n        end\n    end\n\n    always_comb begin\n        walk_left = 1'b0;\n        walk_right = 1'b0;\n        aaah = 1'b0;\n        digging = 1'b0;\n        next_state = current_state;\n\n        case (current_state)\n            WALK_LEFT: begin\n                walk_left = 1'b1;\n                if (!ground) begin\n                    next_state = FALLING;\n                end else if (dig) begin\n                    next_state = DIGGING;\n                end else if (bump_left || (bump_left && bump_right)) begin\n                    next_state = WALK_RIGHT;\n                end\n            end\n\n            WALK_RIGHT: begin\n                walk_right = 1'b1;\n                if (!ground) begin\n                    next_state = FALLING;\n                end else if (dig) begin\n                    next_state = DIGGING;\n                end else if (bump_right || (bump_left && bump_right)) begin\n                    next_state = WALK_LEFT;\n                end\n            end\n\n            FALLING: begin\n                aaah = 1'b1;\n                if (ground) begin\n                    if (fall_counter >= 5'd20) begin\n                        next_state = SPLATTER;\n                    end else begin\n                        next_state = WALK_LEFT;\n                    end\n                end\n            end\n\n            DIGGING: begin\n                digging = 1'b1;\n                if (!ground) begin\n                    next_state = FALLING;\n                end\n            end\n\n            SPLATTER: begin\n                // All outputs remain 0\n            end\n\n            default: begin\n                next_state = WALK_LEFT;\n            end\n        endcase\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 104,
        "passfail": "R"
    },
    "iterations_used": 2
}