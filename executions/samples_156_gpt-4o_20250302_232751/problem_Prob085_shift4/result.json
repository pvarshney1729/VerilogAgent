{
    "code": "module TopModule (\n    input logic clk,          // Clock signal\n    input logic areset,       // Asynchronous reset signal\n    input logic load,         // Load enable signal\n    input logic ena,          // Shift enable signal\n    input logic [3:0] data,   // 4-bit data input\n    output logic [3:0] q      // 4-bit shift register output\n);\n\n    always_ff @(posedge clk or posedge areset) begin\n        if (areset) begin\n            q <= 4'b0000;\n        end else if (load) begin\n            q <= data;\n        end else if (ena) begin\n            q <= {1'b0, q[3:1]};\n        end\n    end\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "."
    },
    "iterations_used": 2
}