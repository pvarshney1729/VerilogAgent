{
    "code": "module TopModule (\n    input logic clk,\n    input logic reset,\n    output logic [9:0] q\n);\n\n    // Internal register to hold the count value\n    logic [9:0] count;\n\n    // Sequential logic for counter with synchronous reset\n    always_ff @(posedge clk) begin\n        if (reset) begin\n            count <= 10'b0000000000; // Reset count to 0\n        end else if (count == 10'd999) begin\n            count <= 10'b0000000000; // Wrap around to 0 after reaching 999\n        end else begin\n            count <= count + 1; // Increment count\n        end\n    end\n\n    // Assign the internal count to the output\n    assign q = count;\n\nendmodule",
    "test_results": {
        "num_mismatch": 0,
        "passfail": "."
    },
    "iterations_used": 1
}